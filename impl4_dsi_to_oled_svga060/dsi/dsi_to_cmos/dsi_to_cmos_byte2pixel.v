//===========================================================================
// Verilog file generated by Clarity Designer    02/20/2024    12:51:05  
// Filename: dsi_to_cmos_byte2pixel.v   IP package: D-PHY to CMOS 1.3
// Copyright(c) 2016 Lattice Semiconductor Corporation. All rights reserved. 
//===========================================================================

module dsi_to_cmos_byte2pixel (
    input  wire	                             reset_byte_n_i,
    input  wire	                             clk_byte_i,
    input  wire                              sp_en_i,	      // Short Packet Enable
    input  wire                              sp2_en_i,	      // Short Packet Enable #2
    input  wire [5:0]                        dt_i,	      // Data Type
    input  wire [5:0]                        dt2_i,	      // Data Type #2
    input  wire                              lp_av_en_i,      // Long Packet of Active Video Enable
    input  wire                              lp2_av_en_i,      // Long Packet of Active Video Enable #2
    input  wire	                             payload_en_i,    // paload enable
    input  wire [4*8-1:0]    payload_i,       // payload
    input  wire [15:0]                       wc_i,            // payload byte count
    input  wire [15:0]                       wc2_i,           // payload byte count #2

    input  wire	                             reset_pixel_n_i,
    input  wire	                             clk_pixel_i,
    output wire                              vsync_o,         // Vsync in clk_pixel domain
    output wire                              hsync_o,         // Hsync in clk_pixel domain
    output wire                              fv_o,            // Frame Valid in clk_pixel domain
    output wire                              lv_o,            // Line Valid in clk_pixel domain
    output wire                              de_o,            // picture data enable
    output wire [24*1-1:0] pd_o,            // picture data
    output wire [1:0]                        p_odd_o,         // odd pixel indicator
    output wire [3:0]                        write_cycle_o,   // payload Write Cycle (for debug)
    output wire                              mem_we_o,        // payload Write Enable (for debug)
    output wire                              mem_re_o,        // payload Read Enable (for debug)
    output wire [1:0]                        read_cycle_o,    // pixel data Read Cycle (for debug)
    output wire [2:0]                        mem_radr_o       // pixel data Read Address (for debug)
);

byte2pixel 
#(
    .DT              (6'h3E),
    .RX_TYPE         ("DSI"),
    .NUM_RX_LANE     (4),
    .RX_GEAR         (8),
    .PD_BUS_WIDTH    (24),
    .NUM_TX_CH       (1)
)
byte2pixel (
    .reset_byte_n_i  (reset_byte_n_i),
    .reset_pixel_n_i (reset_pixel_n_i),
    .clk_byte_i      (clk_byte_i),
    .clk_pixel_i     (clk_pixel_i),
    .sp_en_i         (sp_en_i),
    .sp2_en_i        (sp2_en_i),
    .dt_i            (dt_i),
    .dt2_i           (dt2_i),
    .lp_av_en_i      (lp_av_en_i),
    .lp2_av_en_i     (lp2_av_en_i),
    .payload_en_i    (payload_en_i),
    .payload_i       (payload_i),
    .wc_i            (wc_i),
    .wc2_i           (wc2_i),
    .vsync_o         (vsync_o),
    .hsync_o         (hsync_o),
    .fv_o            (fv_o),
    .lv_o            (lv_o),
    .de_o            (de_o),
    .pd_o            (pd_o),
    .p_odd_o         (p_odd_o),
    .write_cycle_o   (write_cycle_o),
    .mem_we_o        (mem_we_o),
    .mem_re_o        (mem_re_o),
    .read_cycle_o    (read_cycle_o),
    .mem_radr_o      (mem_radr_o)
);

endmodule

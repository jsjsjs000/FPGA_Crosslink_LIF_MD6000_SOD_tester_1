// byte2pixel_beh.v generated by Lattice IP Model Creator version 1
// created on Fri, Mar 16, 2018  2:28:11 PM
// Copyright(c) 2007 Lattice Semiconductor Corporation. All rights reserved
// obfuscator_exe version 1.mar0807

// top






















































`timescale 1 ns / 100 ps
module byte2pixel #(

    parameter DSI_MODE       = "NONBURST_PULSES",                                                                                                         parameter VSA            = 5,              parameter HSA            = 8,          

    parameter CTRL_POL       = "POSITIVE", 
    parameter DT             = 6'h3E,    parameter RX_TYPE        = "DSI",    parameter NUM_RX_LANE    = 4,    parameter RX_GEAR        = 8,    parameter PD_BUS_WIDTH   = 24,    parameter NUM_TX_CH      = 1
)
(
    input  wire                             reset_byte_n_i,
    input  wire                             clk_byte_i,
    input  wire                              sp_en_i,	      
    input  wire                              sp2_en_i,	      
    input  wire [5:0]                        dt_i,	      
    input  wire [5:0]                        dt2_i,	      
    input  wire                              lp_av_en_i,      
    input  wire                              lp2_av_en_i,      
    input  wire                             payload_en_i,    
    input  wire [NUM_RX_LANE*RX_GEAR-1:0]    payload_i,       
    input  wire [15:0]                       wc_i,            
    input  wire [15:0]                       wc2_i,           

    input  wire                             reset_pixel_n_i,
    input  wire                             clk_pixel_i,
    output wire                              vsync_o,         
    output wire                              hsync_o,         
    output wire                              fv_o,            
    output wire                              lv_o,            
    output wire                              de_o,            
    output wire [PD_BUS_WIDTH*NUM_TX_CH-1:0] pd_o,            
    output wire [1:0]                        p_odd_o,         
    output wire [3:0]                        write_cycle_o,   
    output wire                              mem_we_o,        
    output wire                              mem_re_o,        
    output wire [1:0]                        read_cycle_o,    
    output wire [2:0]                        mem_radr_o       
);
localparam VSYNC_START =     6'h01;
localparam sh4109f =       6'h11;
localparam qv84fc =     6'h21;
localparam dm427e4 =       6'h31;
localparam fp13f23 =     6'h00;
localparam cb9f91f =       6'h01;
localparam jpfc8fd =          6'h1E;
localparam bye47ef =    6'h2E;
localparam ep23f7b =            6'h2A;
localparam aa1fbdd =           6'h2C;
localparam shfdee9 =        6'h18;
localparam uief74d = 6'h1A;
localparam bl7ba68 =   6'h1C;
localparam nrdd346 =        6'h1E;
localparam the9a37 = (DSI_MODE=="BURST") ? 1024 : 8;
localparam kq68df2 = (DSI_MODE=="BURST") ? 10 : 3;
localparam xl37c80 = (NUM_RX_LANE*RX_GEAR < PD_BUS_WIDTH*NUM_TX_CH) ?    PD_BUS_WIDTH*NUM_TX_CH :                            (NUM_RX_LANE*RX_GEAR <= PD_BUS_WIDTH*NUM_TX_CH*2) ? PD_BUS_WIDTH*NUM_TX_CH*2 :                            (NUM_RX_LANE*RX_GEAR <= PD_BUS_WIDTH*NUM_TX_CH*3) ? PD_BUS_WIDTH*NUM_TX_CH*3 :                                                                                PD_BUS_WIDTH*NUM_TX_CH*4;
localparam ps7c7e1 = (((xl37c80 == 10) || (xl37c80 == 12) || (xl37c80 == 18) || (xl37c80 == 20)                           || (xl37c80 == 36)) && (DT != bye47ef)) ? 18 : 16;
reg                              cmce611, zk73089;
reg [9:0]                        uk9844b, xjc2259;
reg                              hq112cf, ri8967b, mr4b3da, ay59ed5, necf6a8;
reg                              ld7b543, rgdaa1f, xwd50fb, pua87db;
reg                              os43edb, ie1f6d8, zkfb6c0, ykdb603;
reg                              wwdb018, jpd80c0, lqc0607, nt303a;
reg                              gd181d7, nec0ebd, gd75eb, ba3af5d, nrd7aea, ngbd757;
reg                              dmebaba, xw5d5d3, sueae9b, ne574d9;
reg                              lfba6ca, shd3657;
reg                              zz9b2bc, gbd95e6;
reg [NUM_RX_LANE*RX_GEAR-1:0]    aabcd53, jpe6a99, pu354cf, rvaa67a;
reg [3:0]                        ay533d6;
reg                              je99eb0;
reg [kq68df2-1:0]                        of7ac13;
reg                              mrd609c, dbb04e4, wy82726;
reg [1:0]                        bn13931, vk9c98f, zke4c7a, kf263d2, sw31e94;
reg                              sj8f4a1, yx7a50d, thd286d, lf9436f;
reg                              yza1b7f, cbdbfc, yk6dfe5, gb6ff28;
reg                              wj7f945, zxfca2c, yke5167, hd28b39;
reg                              bl459ce, oh2ce77, cm673bc, ir39de0;
reg [15:0]                       sucef05, su77828, mgbc140, uie0a00;
reg [1:0]                        uk5000;
reg                              hd28000, fn40007, ou3e, ie1f0;
reg                              mgf80, yz7c01, ks3e00c, icf0061;
reg                              mt80308, tw1844;
reg                              dbc223, fn6111e;
reg                              kf88f7, mr447bd, ux23dec, zm1ef65;
reg                              kdf7b2b, babd95c;
reg                              rtecae3, cz6571e, ks2b8f5, ay5c7a9;
reg                              the3d49, ri1ea4f;
reg                              wwf527b, swa93d8, me49ec1, dz4f609;
reg                              jp7b04f, dzd827f;
reg                              osc13ff, lf9ff8, vv4ffc7, sh7fe3e;
reg                              qgff1f4, gbf8fa1, fnc7d0d;
reg                              ou3e86e, lqf4370, kfa1b82, uxdc14;
reg                              pf6e0a5, mr7052e, qi82974, zm14ba0, dba5d02;
reg                              ou2e816, jp740b1, vxa058e, ir2c77;
reg                              ph163bc, anb1de6, fp8ef35, su779ae, mgbcd70;
reg                              ble6b81, do35c0f;
reg                              cbae07b, mr703dc, tj81ee4, aaf727,ld7b939;
reg [1:0]                        ofdc9ce, vie4e74, fp273a2;
reg                              gd39d16, cmce8b5;
reg                              xj745a8, baa2d46, fp16a33, dbb519f, xya8cfe;
reg                              ww467f2, an33f91;
reg                              an9fc8c, rgfe465, off232b, nt9195d, je8caee;
reg                              en65773, aa2bb9d;
reg                              zk5dce9, faee74a, jc73a52, sw9d292, hbe9491;
reg                              fn4a48f, xw5247f;
reg                              ks923fa, nt91fd0, kf8fe86, ip7f434, sufa1a5;
reg [15:0]                       vid0d29, vk8694a, mg34a52, xla5291;
reg [ps7c7e1:0]             ld4a47d, tu523ef, hd91f7a, oh8fbd6;
reg                              me7deb4, ykef5a1, gb7ad08, ald6844;
reg                              ohb4225, ira112c, ir8965, wj44b2d;
reg                              zm2596d, kf2cb6a, yx65b54, db2daa4;
reg [ps7c7e1:0]             of6a931;
reg                              ip5498d, wla4c6c, mt26364;
reg                              ie31b24, ou8d921, rg6c909;
reg                              dz6484a, ou24256, co212b1;
reg                              nt9589, hb4ac4e, ic56276;
reg                              wlb13b0, tw89d84;
reg                              gb4ec23, by7611c;
reg                              ntb08e3, fp8471f;
reg                              qv238fe, vx1c7f5;
reg                              fne3faf, ie1fd7f;
reg                              dmfebf9, ayf5fca;
reg                              fpafe51, of7f28f;
reg                              rtf947d, jcca3ee;
reg                              en51f73, qv8fb9c;
reg                              cm7dce4, xwee721;
reg                              xw7390a, ba9c852;
reg                              vie4292, gq21493;
reg                              qia499, ho524c9;
reg                              mg9264a, ba93250;
reg                              ri99282, yxc9413;
reg                              rt4a09c, rt504e7;
reg                              sw8273f, vx139f9;
reg                              zm9cfcf;
reg [1:0]                        gbe7e7a, ri3f3d5, pff9eab, xwcf55f;
reg                              mr7aafb, vid57dc;
reg                              anabee3;
reg                              bl5f71d, vifb8ee, qtdc772, rte3b95, cb1dcaf, dmee57c, su72be2;
reg                              oh95f10, tjaf884, vi7c427, qte213a;
reg                              ou109d4, tj84ea0, db27507;
reg [kq68df2-1:0]                        sud41f2;
reg [xl37c80-1:0]         qv7c8e;
reg [PD_BUS_WIDTH*NUM_TX_CH-1:0] tj91d0d, hd8e86e;
reg                              ld74376, kfa1bb6, uxddb4;
reg                              pf6eda5, ps76d2f, oub697a;
reg [1:0]                        irb4bd0;
wire [ps7c7e1:0]            xy2f42e, yx7a172, rgd0b95, qv85caa;
wire                       co2e555, kq72aa8, cb95540, fpaaa05;
wire                       pf5502f, doa817f, zx40bfb, wy5fdf;
wire                       zm2fef9, sh7f7cb, vifbe5d, psdf2ea, fnf9752;
wire                       qgcba96, dm5d4b0;
wire                       osea583;
wire                       dm52c18;
wire [ps7c7e1:0]      vxb061a, ls830d6, qv186b3, qtc359d;
reg [xl37c80-1:0]   ipd6769;
wire [xl37c80-1:0]  co9da60;
wire                       ened300;
wire                       fa69805;
reg ic4c02a;
reg sh60150;
reg [5 : 0] iea85;
reg [5 : 0] qi5429;
reg zm2a148;
reg pf50a42;
reg an85216;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] vi42d2a;
reg [15 : 0] ph16952;
reg [15 : 0] epb4a97;
reg lfa54bd;
reg fc2a5ef;
reg [9 : 0] jc52f7a;
reg [9 : 0] gq97bd3;
reg jebde99;
reg ayef4cb;
reg wj7a658;
reg czd32c5;
reg zm9962c;
reg iccb163;
reg vi58b19;
reg zkc58ca;
reg yz2c653;
reg jc6329d;
reg nt194ea;
reg rgca757;
reg os53abb;
reg uk9d5d9;
reg uieaec9;
reg dm57649;
reg irbb24a;
reg uvd9255;
reg wjc92ad;
reg yk4956c;
reg rt4ab60;
reg nr55b06;
reg jead836;
reg ps6c1b2;
reg qt60d93;
reg rv6c9c;
reg ir364e6;
reg pub2735;
reg tw939ab;
reg je9cd5b;
reg jpe6ada;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] uv5b5d4;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] dbba91e;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] yz23d85;
reg [NUM_RX_LANE * RX_GEAR - 1 : 0] jrb0b5f;
reg [3 : 0] yz85aff;
reg rv2d7fd;
reg [kq68df2 - 1 : 0] fn5ff7f;
reg eaffbff;
reg kdfdff8;
reg iceffc5;
reg [1 : 0] mr7fe29;
reg [1 : 0] uiff14c;
reg [1 : 0] mrf8a61;
reg [1 : 0] zkc530d;
reg [1 : 0] ux2986a;
reg yk4c354;
reg rt61aa0;
reg yzd506;
reg qt6a834;
reg yx541a5;
reg zza0d2d;
reg lf696e;
reg ks34b76;
reg hda5bb1;
reg xl2dd8e;
reg zx6ec76;
reg rg763b7;
reg kfb1dbb;
reg hd8eddd;
reg jc76eee;
reg twb7772;
reg [15 : 0] anbbb93;
reg [15 : 0] fnddc9c;
reg [15 : 0] byee4e6;
reg [15 : 0] cm72732;
reg [1 : 0] tw93991;
reg je9cc8b;
reg jpe645a;
reg nt322d6;
reg fp916b7;
reg db8b5bf;
reg jp5adff;
reg mrd6fff;
reg fcb7ffd;
reg phbffea;
reg sufff56;
reg qgffab0;
reg czfd580;
reg sueac04;
reg me56021;
reg dbb0108;
reg yz80846;
reg pu4235;
reg qi211aa;
reg ux8d51;
reg me46a8d;
reg tw35468;
reg xlaa342;
reg yx51a16;
reg sw8d0b4;
reg su685a0;
reg ne42d01;
reg db1680a;
reg mtb4057;
reg tja02bc;
reg ri15e7;
reg gqaf3a;
reg by579d0;
reg ukbce83;
reg mre7419;
reg je3a0cc;
reg byd0663;
reg vk8331b;
reg tj198db;
reg kdcc6de;
reg ho636f4;
reg vk1b7a2;
reg ykdbd12;
reg ayde891;
reg rgf4489;
reg fca244a;
reg gd12252;
reg hd91294;
reg ri894a7;
reg nr4a53a;
reg jc529d7;
reg jr94ebb;
reg doa75de;
reg pu3aef2;
reg vvd7792;
reg wlbbc96;
reg wwde4b4;
reg ipf25a0;
reg ou92d05;
reg vk96829;
reg anb414b;
reg bna0a5c;
reg ym52e6;
reg [1 : 0] mt29730;
reg [1 : 0] sh4b985;
reg [1 : 0] su5cc2c;
reg dze6160;
reg pu30b06;
reg ux85833;
reg kf2c19d;
reg cz60ced;
reg jr676c;
reg an33b67;
reg ym9db3c;
reg yxed9e0;
reg fa6cf04;
reg ic67822;
reg ir3c111;
reg ose088c;
reg zm4460;
reg vx22302;
reg do11816;
reg hq8c0b2;
reg kd60592;
reg yz2c95;
reg nt164ac;
reg jeb2566;
reg wy92b33;
reg ir95999;
reg ukacccc;
reg zk66660;
reg kf33302;
reg fc99815;
reg czcc0aa;
reg [15 : 0] wj60554;
reg [15 : 0] qv2aa5;
reg [15 : 0] ym1552c;
reg [15 : 0] zzaa961;
reg [ps7c7e1 : 0] zza587c;
reg [ps7c7e1 : 0] dz61f35;
reg [ps7c7e1 : 0] ne7cd70;
reg [ps7c7e1 : 0] pu35c1f;
reg uxae0fb;
reg al707dc;
reg zm83ee4;
reg sw1f722;
reg byfb910;
reg mrdc882;
reg fae4414;
reg lf220a3;
reg aa1051e;
reg mg828f1;
reg tw14788;
reg iea3c43;
reg [ps7c7e1 : 0] rgf10ca;
reg ec88652;
reg kq43290;
reg jr19481;
reg lqca40f;
reg tu5207b;
reg gd903da;
reg lf81ed5;
reg ouf6af;
reg th7b579;
reg dmdabcf;
reg psd5e7b;
reg bnaf3da;
reg dm79ed6;
reg facf6b3;
reg zx7b59b;
reg zkdacdf;
reg kdd66fb;
reg ksb37dc;
reg hd9bee1;
reg vidf70f;
reg zkfb87a;
reg wjdc3d2;
reg lqe1e95;
reg aaf4aa;
reg kd7a551;
reg ldd2a8d;
reg yz9546f;
reg zzaa37d;
reg of51bee;
reg qi8df74;
reg ip6fba1;
reg kq7dd0d;
reg jcee869;
reg vv7434b;
reg mta1a5e;
reg kfd2f4;
reg ho697a4;
reg en4bd23;
reg mr5e91c;
reg jcf48e5;
reg yza472b;
reg gd2395d;
reg tj1caed;
reg ice576e;
reg gq2bb71;
reg vi5db89;
reg aledc4a;
reg [1 : 0] xj6e254;
reg [1 : 0] zx712a6;
reg [1 : 0] ri89536;
reg [1 : 0] nr4a9b2;
reg gb54d96;
reg eca6cb4;
reg cb365a1;
reg twb2d0d;
reg vk9686a;
reg anb4353;
reg ana1a9c;
reg sjd4e4;
reg uv6a724;
reg yk53924;
reg xy9c921;
reg pse490a;
reg gq24852;
reg mg24290;
reg mg21481;
reg mga409;
reg by52049;
reg [kq68df2 - 1 : 0] db81255;
reg [xl37c80 - 1 : 0] me49576;
reg [PD_BUS_WIDTH * NUM_TX_CH - 1 : 0] cbaec36;
reg [PD_BUS_WIDTH * NUM_TX_CH - 1 : 0] pu86d5f;
reg sj36afa;
reg phb57d4;
reg qvabea6;
reg zx5f535;
reg eafa9ae;
reg icd4d70;
reg [1 : 0] uka6b80;
reg [ps7c7e1 : 0] wlae00b;
reg [ps7c7e1 : 0] yz802e4;
reg [ps7c7e1 : 0] lsb922;
reg [ps7c7e1 : 0] vie4890;
reg co24482;
reg nt22411;
reg sj1208e;
reg yz90474;
reg wy823a5;
reg zm11d29;
reg db8e94a;
reg fn74a56;
reg tja52b7;
reg sj295bf;
reg pf4adfd;
reg ui56fee;
reg rib7f71;
reg hdbfb8a;
reg ipfdc56;
reg tuee2b5;
reg th715aa;
reg [ps7c7e1 : 0] yk56ab4;
reg [ps7c7e1 : 0] tjaad0e;
reg [ps7c7e1 : 0] sjb43b9;
reg [ps7c7e1 : 0] zmee64;
reg [xl37c80 - 1 : 0] wyb9911;
reg [xl37c80 - 1 : 0] bl6444d;
reg fp2226f;
reg fc1137e;
reg [2047:0] ba89bf3;
wire [302:0] rg4df9b;


localparam qt6fcdb = 303,zx7e6dd = 32'hfdffc68b;
localparam [31:0] blf36ef = zx7e6dd;
localparam medbbfe = zx7e6dd & 4'hf;
localparam [11:0] wweff8e = 'h7ff;
wire [(1 << medbbfe) -1:0] hofe38c;
reg [qt6fcdb-1:0] ph8e31b;
reg [medbbfe-1:0] ls8c6ff [0:1];
reg [medbbfe-1:0] hq1bfd2;
reg vidfe93;
integer cmff49b;
integer wwfa4d9;












generate
if (CTRL_POL == "POSITIVE") begin: hq9364e
assign vsync_o = (RX_TYPE == "DSI") ? dba5d02 : 0;
assign hsync_o = (RX_TYPE == "DSI") ? wlbbc96 : 0;
assign fv_o = (((DT == ep23f7b) || (DT == shfdee9) || (DT == uief74d) || (DT == bl7ba68) || (DT == nrdd346)) && (NUM_RX_LANE ==1)) ? zm9962c              : (RX_TYPE == "CSI2") ? ym52e6 : 0;
assign lv_o = (NUM_RX_LANE*RX_GEAR == PD_BUS_WIDTH*NUM_TX_CH) ? an85216 : (RX_TYPE == "CSI2") ? vi5db89 : 0;  
assign de_o = (RX_TYPE == "DSI") ? vi5db89 : 0;
end
else if (CTRL_POL == "NEGATIVE") begin: hqb2fc8
assign vsync_o = (RX_TYPE == "DSI") ? ~gd12252 : 1'b1;
assign hsync_o = (RX_TYPE == "DSI") ? ~wlbbc96 : 1'b1;
assign fv_o = (((DT == ep23f7b) || (DT == shfdee9) || (DT == uief74d) || (DT == bl7ba68) || (DT == nrdd346)) && (NUM_RX_LANE ==1)) ? ~zm9962c              : (RX_TYPE == "CSI2") ? ~ym52e6 : 1'b1;
assign lv_o = (NUM_RX_LANE*RX_GEAR == PD_BUS_WIDTH*NUM_TX_CH) ? ~an85216 : (RX_TYPE == "CSI2") ? ~vi5db89 : 1'b1;  
assign de_o = (RX_TYPE == "DSI") ? ~vi5db89 : 1'b1;
end
endgenerate
assign pd_o = (NUM_RX_LANE*RX_GEAR == PD_BUS_WIDTH*NUM_TX_CH) ? vi42d2a : pu86d5f;  
assign p_odd_o = (PD_BUS_WIDTH*NUM_TX_CH >= 36) ? uka6b80 : 2'b00;

assign write_cycle_o = yz85aff;
assign mem_we_o = rv2d7fd;
assign mem_re_o = twb2d0d;
assign mem_radr_o = db81255;
assign read_cycle_o = ((xl37c80 == PD_BUS_WIDTH*NUM_TX_CH*3) || (xl37c80 == PD_BUS_WIDTH*NUM_TX_CH*4)) ? xj6e254 : 2'd0;
assign zm2fef9 = (NUM_RX_LANE*RX_GEAR == 64) ? (zm2a148 | pf50a42) : zm2a148;


generate    if (DT == bye47ef)      begin        if (NUM_RX_LANE*RX_GEAR == 8)            always @(*)                ipd6769 = {dbba91e[7:2], uv5b5d4[7:2], vi42d2a[7:2]};        else if (NUM_RX_LANE*RX_GEAR == 16)            always @(*)                case (yz85aff[1:0])

                    2'd2 : ipd6769 = {uv5b5d4[15:10], vi42d2a[7:2], vi42d2a[15:10]};                    default : ipd6769 = {uv5b5d4[7:2], uv5b5d4[15:10], vi42d2a[7:2]};                endcase        else if (NUM_RX_LANE*RX_GEAR == 32)            always @(*)                case (yz85aff[1:0])

                    2'd2 : ipd6769 = {vi42d2a[15:10], vi42d2a[23:18], vi42d2a[31:26], uv5b5d4[23:18], uv5b5d4[31:26], vi42d2a[7:2]};                    default : ipd6769 = {uv5b5d4[31:26], vi42d2a[7:2], vi42d2a[15:10], uv5b5d4[7:2], uv5b5d4[15:10], uv5b5d4[23:18]};                endcase        else if (NUM_RX_LANE*RX_GEAR == 64)            always @(*)                case (yz85aff[1:0])


                    2'd2 : ipd6769 = {vi42d2a[47:42], vi42d2a[55:50], vi42d2a[63:58], vi42d2a[23:18], vi42d2a[31:26], vi42d2a[39:34],                                       uv5b5d4[63:58], vi42d2a[7:2], vi42d2a[15:10], uv5b5d4[39:34], uv5b5d4[47:42], uv5b5d4[55:50]};                    default : ipd6769 = {vi42d2a[15:10], vi42d2a[23:18], vi42d2a[31:26], uv5b5d4[55:50], uv5b5d4[63:58], vi42d2a[7:2],                                          uv5b5d4[31:26], uv5b5d4[39:34], uv5b5d4[47:42], uv5b5d4[7:2], uv5b5d4[15:10], uv5b5d4[23:18]};                endcase    end    else if (NUM_RX_LANE*RX_GEAR == xl37c80)          always @(*)            ipd6769 = vi42d2a;    else if (NUM_RX_LANE*RX_GEAR*3 == xl37c80)      begin
        if (RX_TYPE == "CSI2")            always @(*)                ipd6769 = {vi42d2a, uv5b5d4, dbba91e};        else if (RX_TYPE == "DSI")            always @(*)                ipd6769 = {dbba91e, uv5b5d4, vi42d2a};    end    else if (NUM_RX_LANE*RX_GEAR*3 == xl37c80*2)      begin        if (NUM_RX_LANE*RX_GEAR == 8)              always @(*)                case (yz85aff[1:0])                    2'd0 : ipd6769 = {dbba91e[7:0], uv5b5d4[7:4]};

                    default : ipd6769 = {dbba91e[7:0], vi42d2a[3:0]};                endcase        else if ((NUM_RX_LANE*RX_GEAR == 16) && (PD_BUS_WIDTH == 12))              always @(*)                case (yz85aff[1:0])

                    2'd2 : ipd6769 = {vi42d2a[7:0], vi42d2a[15:12], uv5b5d4[15:8], vi42d2a[11:8]};                    default : ipd6769 = {uv5b5d4[15:8], vi42d2a[7:4], uv5b5d4[7:0], vi42d2a[3:0]};                endcase        else if (DT == aa1fbdd)              always @(*)                case (yz85aff[3:0])

                    2'd2 : ipd6769 = {vi42d2a[23:16], vi42d2a[31:28], vi42d2a[15:8], vi42d2a[27:24],                                       uv5b5d4[31:24], vi42d2a[7:4], uv5b5d4[23:16], vi42d2a[3:0]};                    default : ipd6769 = {vi42d2a[7:0], vi42d2a[15:12],                                          uv5b5d4[31:24], vi42d2a[11:8], uv5b5d4[15:8], uv5b5d4[23:20],                                          uv5b5d4[7:0], uv5b5d4[19:16]};                endcase        else if (RX_TYPE == "CSI2")              always @(*)                case (yz85aff[1:0])
                    2'd1 : ipd6769 = {vi42d2a[NUM_RX_LANE*RX_GEAR/2-1:0], uv5b5d4[NUM_RX_LANE*RX_GEAR-1:0]};
                    default : ipd6769 = {vi42d2a[NUM_RX_LANE*RX_GEAR-1:0], uv5b5d4[NUM_RX_LANE*RX_GEAR-1:NUM_RX_LANE*RX_GEAR/2]};                endcase        else if ((RX_TYPE == "DSI") && (NUM_RX_LANE*RX_GEAR == 16))             always @(*)                case (yz85aff[1:0])

                    2'd2 : ipd6769 = {uv5b5d4[15:8], vi42d2a[7:0], vi42d2a[15:8]};                    default : ipd6769 = {uv5b5d4[7:0], uv5b5d4[15:8], vi42d2a[7:0]};                endcase        else if ((RX_TYPE == "DSI") && (NUM_RX_LANE*RX_GEAR == 32))             always @(*)                case (yz85aff[1:0])

                    2'd2 : ipd6769 = {vi42d2a[15:8], vi42d2a[23:16], vi42d2a[31:24], uv5b5d4[23:16], uv5b5d4[31:24], vi42d2a[7:0]};                    default : ipd6769 = {uv5b5d4[31:24], vi42d2a[7:0], vi42d2a[15:8], uv5b5d4[7:0], uv5b5d4[15:8], uv5b5d4[23:16]};                endcase        else if ((RX_TYPE == "DSI") && (NUM_RX_LANE*RX_GEAR == 64))             always @(*)                case (yz85aff[1:0])


                    2'd2 : ipd6769 = {vi42d2a[47:40], vi42d2a[55:48], vi42d2a[63:56], vi42d2a[23:16], vi42d2a[31:24], vi42d2a[39:32],                                       uv5b5d4[63:56], vi42d2a[7:0], vi42d2a[15:8], uv5b5d4[39:32], uv5b5d4[47:40], uv5b5d4[55:48]};                    default : ipd6769 = {vi42d2a[15:8], vi42d2a[23:16], vi42d2a[31:24], uv5b5d4[55:48], uv5b5d4[63:56], vi42d2a[7:0],                                          uv5b5d4[31:24], uv5b5d4[39:32], uv5b5d4[47:40], uv5b5d4[7:0], uv5b5d4[15:8], uv5b5d4[23:16]};                endcase    end    else if (NUM_RX_LANE*RX_GEAR*5 == xl37c80*4)      begin        if (NUM_RX_LANE*RX_GEAR == 8)              always @(*)                case (yz85aff[2:0])                    3'd0 : ipd6769 = {jrb0b5f[7:0], uv5b5d4[3:2]};                    3'd1 : ipd6769 = {jrb0b5f[7:0], dbba91e[5:4]};                    3'd2 : ipd6769 = {jrb0b5f[7:0], yz23d85[7:6]};

                    default : ipd6769 = {jrb0b5f[7:0], vi42d2a[1:0]};                endcase        else if (NUM_RX_LANE*RX_GEAR == 16)              always @(*)                case (yz85aff[2:0])                    3'd0 : ipd6769 = {uv5b5d4[7:0], uv5b5d4[15:14], dbba91e[15:8], uv5b5d4[13:12]};

                    3'd3 : ipd6769 = {dbba91e[15:8], uv5b5d4[7:6], dbba91e[7:0], uv5b5d4[5:4]};                    3'd4 : ipd6769 = {uv5b5d4[7:0], vi42d2a[11:10], dbba91e[15:8], vi42d2a[9:8]};                    default : ipd6769 = {dbba91e[15:8], vi42d2a[3:2], dbba91e[7:0], vi42d2a[1:0]};                endcase        else if (NUM_RX_LANE*RX_GEAR == 32)              always @(*)                case (yz85aff[2:0])


                    3'd2 : ipd6769 = {vi42d2a[7:0], vi42d2a[15:14], uv5b5d4[31:24], vi42d2a[13:12],                                      uv5b5d4[23:16], vi42d2a[11:10], uv5b5d4[15:8], vi42d2a[9:8]};                    3'd3 : ipd6769 = {vi42d2a[15:8], vi42d2a[23:22], vi42d2a[7:0], vi42d2a[21:20],                                      uv5b5d4[31:24], vi42d2a[19:18], uv5b5d4[23:16], vi42d2a[17:16]};                    3'd4 : ipd6769 = {vi42d2a[23:16], vi42d2a[31:30], vi42d2a[15:8], vi42d2a[29:28],                                      vi42d2a[7:0], vi42d2a[27:26], uv5b5d4[31:24], vi42d2a[25:24]};                    default : ipd6769 = {uv5b5d4[31:24], vi42d2a[7:6], uv5b5d4[23:16], vi42d2a[5:4],                                         uv5b5d4[15:8], vi42d2a[3:2], uv5b5d4[7:0], vi42d2a[1:0]};                endcase    end    else if (NUM_RX_LANE*RX_GEAR*9 == xl37c80*4)      begin        if (NUM_RX_LANE*RX_GEAR == 8)              always @(*)                case (yz85aff[3:0])  



                    4'd4 : ipd6769 = {dbba91e[7:2], uv5b5d4[5:0], vi42d2a[3:0], uv5b5d4[7:6]};
                    4'd6 : ipd6769 = {uv5b5d4[1:0], dbba91e[7:4], uv5b5d4[7:2], vi42d2a[5:0]};
                    4'd8 : ipd6769 = {uv5b5d4[3:0], dbba91e[7:6], vi42d2a[1:0], uv5b5d4[7:4], vi42d2a[7:2]};                    default : ipd6769 = {dbba91e[5:0], uv5b5d4[3:0], dbba91e[7:6], vi42d2a[1:0], uv5b5d4[7:4]};                endcase    end    else if (NUM_RX_LANE*RX_GEAR*9 == xl37c80*8)      begin         if (NUM_RX_LANE*RX_GEAR == 16)              always @(*)                case (yz85aff[3:0])

                    4'd2 : ipd6769 = {uv5b5d4[7:2], uv5b5d4[13:8], vi42d2a[3:0], uv5b5d4[15:14]};                    4'd3 : ipd6769 = {uv5b5d4[9:4], uv5b5d4[15:10], vi42d2a[5:0]};                    4'd4 : ipd6769 = {uv5b5d4[11:6], vi42d2a[1:0], uv5b5d4[15:12], vi42d2a[7:2]};                    4'd5 : ipd6769 = {uv5b5d4[13:8], vi42d2a[3:0], uv5b5d4[15:14], vi42d2a[9:4]};                    4'd6 : ipd6769 = {uv5b5d4[15:10], vi42d2a[5:0], vi42d2a[11:6]};                    4'd7 : ipd6769 = {vi42d2a[1:0], uv5b5d4[15:12], vi42d2a[7:2], vi42d2a[13:8]};                    4'd8 : ipd6769 = {vi42d2a[3:0], uv5b5d4[15:14], vi42d2a[9:4], vi42d2a[15:10]};                    default : ipd6769 = {uv5b5d4[5:0], uv5b5d4[11:6], vi42d2a[1:0], uv5b5d4[15:12]};                endcase         else if ((NUM_RX_LANE*RX_GEAR == 32) && (PD_BUS_WIDTH == 12))              always @(*)                case (yz85aff[3:0])                    4'd0 : ipd6769 = {uv5b5d4[23:16], uv5b5d4[31:28], uv5b5d4[15:8], uv5b5d4[27:24],                                       dbba91e[31:24], uv5b5d4[7:4]};

                    4'd2 : ipd6769 = {uv5b5d4[31:24], vi42d2a[7:4], uv5b5d4[23:16], vi42d2a[3:0],                                       uv5b5d4[7:0], uv5b5d4[15:12]};                    4'd3 : ipd6769 = {vi42d2a[7:0], vi42d2a[19:16], uv5b5d4[23:16], uv5b5d4[31:28],                                       uv5b5d4[15:8], uv5b5d4[27:24]};                    4'd4 : ipd6769 = {vi42d2a[7:0], vi42d2a[15:12], uv5b5d4[31:24], vi42d2a[11:8],                                       uv5b5d4[15:8], uv5b5d4[23:20]};                    4'd5 : ipd6769 = {vi42d2a[15:8], vi42d2a[27:24], uv5b5d4[31:24], vi42d2a[7:4],                                       uv5b5d4[23:16], vi42d2a[3:0]};                    4'd6 : ipd6769 = {vi42d2a[15:8], vi42d2a[23:20], vi42d2a[7:0], vi42d2a[19:16],                                       uv5b5d4[23:16], uv5b5d4[31:28]};
                    4'd8 : ipd6769 = {uv5b5d4[23:16], vi42d2a[3:0], uv5b5d4[7:0], uv5b5d4[15:12],                                       dbba91e[31:24], uv5b5d4[11:8]};                    default : ipd6769 = {uv5b5d4[31:24], vi42d2a[11:8], uv5b5d4[15:8], uv5b5d4[23:20],                                          uv5b5d4[7:0], uv5b5d4[19:16]};                endcase        else if (RX_GEAR == 8)              always @(*)                case (yz85aff[3:0])


                    4'd2 : ipd6769 = {uv5b5d4[27:22], vi42d2a[1:0], uv5b5d4[31:28], vi42d2a[7:2],                                      uv5b5d4[9:4], uv5b5d4[15:10], uv5b5d4[21:16]};                    4'd3 : ipd6769 = {uv5b5d4[31:26], vi42d2a[5:0], vi42d2a[11:6],                                      uv5b5d4[13:8], uv5b5d4[19:14], uv5b5d4[25:20]};                    4'd4 : ipd6769 = {vi42d2a[3:0], uv5b5d4[31:30], vi42d2a[9:4], vi42d2a[15:10],                                      uv5b5d4[17:12], uv5b5d4[23:18], uv5b5d4[29:24]};                    4'd5 : ipd6769 = {vi42d2a[7:2], vi42d2a[13:8], vi42d2a[19:14],                                      uv5b5d4[21:16], uv5b5d4[27:22], vi42d2a[1:0], uv5b5d4[31:28]};                    4'd6 : ipd6769 = {vi42d2a[11:6], vi42d2a[17:12], vi42d2a[23:18],                                      uv5b5d4[25:20], uv5b5d4[31:26], vi42d2a[5:0]};                    4'd7 : ipd6769 = {vi42d2a[15:10], vi42d2a[21:16], vi42d2a[27:22],                                      uv5b5d4[29:24], vi42d2a[3:0], uv5b5d4[31:30], vi42d2a[9:4]};                    4'd8 : ipd6769 = {vi42d2a[19:14], vi42d2a[25:20], vi42d2a[31:26],                                      vi42d2a[1:0], uv5b5d4[31:28], vi42d2a[7:2], vi42d2a[13:8]};                    default : ipd6769 = {uv5b5d4[23:18], uv5b5d4[29:24], vi42d2a[3:0], uv5b5d4[31:30],                                         uv5b5d4[5:0], uv5b5d4[11:6], uv5b5d4[17:12]};                endcase        else if ((RX_GEAR == 16)&&(NUM_RX_LANE==4))              always @(*)                case (yz85aff[3:0])


                    4'd2 : ipd6769 = {vi42d2a[3:0], uv5b5d4[63:62], vi42d2a[9:4], vi42d2a[15:10], uv5b5d4[49:44], uv5b5d4[55:50], uv5b5d4[61:56],                                      uv5b5d4[31:26], uv5b5d4[37:32], uv5b5d4[43:38], uv5b5d4[13:8], uv5b5d4[19:14], uv5b5d4[25:20]};                    4'd3 : ipd6769 = {vi42d2a[11:6], vi42d2a[17:12], vi42d2a[23:18], uv5b5d4[57:52], uv5b5d4[63:58], vi42d2a[5:0],                                      uv5b5d4[39:34], uv5b5d4[45:40], uv5b5d4[51:46], uv5b5d4[21:16], uv5b5d4[27:22], uv5b5d4[33:28]};                    4'd4 : ipd6769 = {vi42d2a[19:14], vi42d2a[25:20], vi42d2a[31:26], vi42d2a[1:0], uv5b5d4[63:60], vi42d2a[7:2], vi42d2a[13:8],                                      uv5b5d4[47:42], uv5b5d4[53:48], uv5b5d4[59:54], uv5b5d4[29:24], uv5b5d4[35:30], uv5b5d4[41:36]};                    4'd5 : ipd6769 = {vi42d2a[27:22], vi42d2a[33:28], vi42d2a[39:34], vi42d2a[9:4], vi42d2a[15:10], vi42d2a[21:16],                                      uv5b5d4[55:50], uv5b5d4[61:56], vi42d2a[3:0], uv5b5d4[63:62], uv5b5d4[37:32], uv5b5d4[43:38], uv5b5d4[49:44]};                    4'd6 : ipd6769 = {vi42d2a[35:30], vi42d2a[41:36], vi42d2a[47:42], vi42d2a[17:12], vi42d2a[23:18], vi42d2a[29:24],                                      uv5b5d4[63:58], vi42d2a[5:0], vi42d2a[11:6], uv5b5d4[45:40], uv5b5d4[51:46], uv5b5d4[57:52]};                    4'd7 : ipd6769 = {vi42d2a[43:38], vi42d2a[49:44], vi42d2a[55:50], vi42d2a[25:20], vi42d2a[31:26], vi42d2a[37:32],                                      vi42d2a[7:2], vi42d2a[13:8], vi42d2a[19:14], uv5b5d4[53:48], uv5b5d4[59:54], vi42d2a[1:0], uv5b5d4[63:60]};                    4'd8 : ipd6769 = {vi42d2a[51:46], vi42d2a[57:52], vi42d2a[63:58], vi42d2a[33:28], vi42d2a[39:34], vi42d2a[45:40],                                      vi42d2a[15:10], vi42d2a[21:16], vi42d2a[27:22], uv5b5d4[61:56], vi42d2a[3:0], uv5b5d4[63:62], vi42d2a[9:4]};                    default : ipd6769 = {uv5b5d4[59:54], vi42d2a[1:0], uv5b5d4[63:60], vi42d2a[7:2], uv5b5d4[41:36], uv5b5d4[47:42], uv5b5d4[53:48],                                         uv5b5d4[23:18], uv5b5d4[29:24], uv5b5d4[35:30], uv5b5d4[5:0], uv5b5d4[11:6], uv5b5d4[17:12]};                endcase        else if ((RX_GEAR == 16)&&(NUM_RX_LANE==2))              always @(*)                case (yz85aff[3:0])                    4'd2 : ipd6769 = {uv5b5d4[27:22], vi42d2a[1:0], uv5b5d4[31:28], vi42d2a[7:2], uv5b5d4[9:4], uv5b5d4[15:10], uv5b5d4[21:16]};                     4'd3 : ipd6769 = {uv5b5d4[31:26], vi42d2a[5:0], vi42d2a[11:6], uv5b5d4[13:8], uv5b5d4[19:14], uv5b5d4[25:20]};                     4'd4 : ipd6769 = {vi42d2a[3:0], uv5b5d4[31:30], vi42d2a[9:4], vi42d2a[15:10], uv5b5d4[17:12], uv5b5d4[23:18], uv5b5d4[29:24]};                     4'd5 : ipd6769 = {vi42d2a[7:2], vi42d2a[13:8], vi42d2a[19:14], uv5b5d4[21:16], uv5b5d4[27:22], vi42d2a[1:0], uv5b5d4[31:28]};                     4'd6 : ipd6769 = {vi42d2a[11:6], vi42d2a[17:12], vi42d2a[23:18], uv5b5d4[25:20], uv5b5d4[31:26], vi42d2a[5:0]};                     4'd7 : ipd6769 = {vi42d2a[15:10], vi42d2a[21:16], vi42d2a[27:22], uv5b5d4[29:24], vi42d2a[3:0], uv5b5d4[31:30], vi42d2a[9:4]};                     4'd8 : ipd6769 = {vi42d2a[19:14], vi42d2a[25:20], vi42d2a[31:26], vi42d2a[1:0], uv5b5d4[31:28], vi42d2a[7:2], vi42d2a[13:8]};                     default : ipd6769 = {uv5b5d4[23:18], uv5b5d4[29:24], vi42d2a[3:0], uv5b5d4[31:30], uv5b5d4[5:0], uv5b5d4[11:6], uv5b5d4[17:12]};                 endcase    end
endgenerate

generate    if (RX_TYPE == "DSI")    begin                always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                hq112cf <= 0;            else if ((ic4c02a & (iea85 == VSYNC_START)) | (sh60150 & (qi5429 == VSYNC_START)))                hq112cf <= 1;            else                hq112cf <= 0;        end                if (DSI_MODE == "NONBURST_PULSES") begin: cb8685            always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (~reset_byte_n_i)                    mr4b3da <= 0;                else if ((ic4c02a & (iea85 == sh4109f)) | (sh60150 & (qi5429 == sh4109f)))                    mr4b3da <= 1;                else                    mr4b3da <= 0;            end        end        else begin: mre20aa            always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (!reset_byte_n_i) begin                    uk9844b <= 0;                end                else if (jc52f7a == VSA) begin                    uk9844b <= 0;                end                else if (jebde99) begin                    uk9844b <= 1'b1;                end                else if (|jc52f7a && ayef4cb) begin                    uk9844b <= jc52f7a + 1'b1;                end            end            always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (!reset_byte_n_i) begin                    cmce611 <= 0;                end                else if (wj7a658) begin                    cmce611 <= 0;                end                else if (jc52f7a == VSA) begin                    cmce611 <= 1'b1;                end            end            always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (~reset_byte_n_i)                    mr4b3da <= 0;                else if (lfa54bd && (ic4c02a & (iea85 == qv84fc)) | (sh60150 & (qi5429 == qv84fc)))                    mr4b3da <= 1;                else                    mr4b3da <= 0;            end        end                always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                ri8967b <= 0;            else if ((ic4c02a & (iea85 == qv84fc)) | (sh60150 & (qi5429 == qv84fc)))                ri8967b <= 1;            else                ri8967b <= 0;        end                if (DSI_MODE == "NONBURST_PULSES") begin: ym21909            always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (~reset_byte_n_i)                    ay59ed5 <= 0;                else if ((ic4c02a & (iea85 == dm427e4)) | (sh60150 & (qi5429 == dm427e4)))                    ay59ed5 <= 1;                else                    ay59ed5 <= 0;            end        end        else begin: wl9f2e5            always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (~reset_byte_n_i)                    ay59ed5 <= 0;                else                    ay59ed5 <= 0;            end        end                        if (DSI_MODE=="BURST") begin: ri30022            always @(*) begin                if (vi58b19) begin                    shd3657 = 1'b1;                end                                else if (kdcc6de) begin                    shd3657 = 1'b0;                end                else begin                    shd3657 = pub2735;                end            end            always @(*) begin                if (nt194ea) begin                    gbd95e6 = 1'b1;                end                                else if (ri894a7) begin                    gbd95e6 = 1'b0;                end                else begin                    gbd95e6 = je9cd5b;                end            end                        always @(posedge clk_byte_i or negedge reset_byte_n_i) begin                if (!reset_byte_n_i) begin                    lfba6ca <= 0;                    zz9b2bc <= 0;                end                else begin                    lfba6ca <= tw939ab;                    zz9b2bc <= jpe6ada;                end            end            always @(posedge clk_pixel_i or negedge reset_pixel_n_i) begin                if (~reset_pixel_n_i) begin                    ou3e86e   <= 0;                    ou2e816   <= 0;                end                else begin                    ou3e86e   <= tw939ab;                    ou2e816   <= jpe6ada;                end            end        end        else begin: irae411            always @(posedge clk_pixel_i or negedge reset_pixel_n_i) begin                if (~reset_pixel_n_i) begin                    ou3e86e   <= 0;                    ou2e816   <= 0;                end                else begin                    ou3e86e   <= ps6c1b2;                    ou2e816   <= rv6c9c;                end            end        end                                always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)            begin                ld7b543 <= 0;                rgdaa1f <= 0;                xwd50fb <= 0;                pua87db <= 0;                dmebaba <= 0;                os43edb <= 0;                ie1f6d8 <= 0;                zkfb6c0 <= 0;                ykdb603 <= 0;                sueae9b <= 0;                wwdb018   <= 0;                jpd80c0   <= 0;                lqc0607   <= 0;                nt303a   <= 0;                xw5d5d3   <= 0;                gd181d7   <= 0;                nec0ebd   <= 0;                gd75eb   <= 0;                ba3af5d   <= 0;                ne574d9   <= 0;            end            else            begin                ld7b543 <= jebde99;                rgdaa1f <= iccb163;                xwd50fb <= vi58b19;                pua87db <= zkc58ca;                dmebaba <= iccb163 | vi58b19 | zkc58ca | yz2c653;                os43edb <= ayef4cb;                ie1f6d8 <= jc6329d;                zkfb6c0 <= nt194ea;                ykdb603 <= rgca757;                sueae9b <= jc6329d | nt194ea | rgca757 | os53abb;                wwdb018   <= wj7a658;                jpd80c0   <= uk9d5d9;                lqc0607   <= uieaec9;                nt303a   <= dm57649;                xw5d5d3   <= uk9d5d9 | uieaec9 | dm57649 | irbb24a;                gd181d7   <= czd32c5;                nec0ebd   <= uvd9255;                gd75eb   <= wjc92ad;                ba3af5d   <= yk4956c;                ne574d9   <= uvd9255 | wjc92ad | yk4956c | rt4ab60;            end        end    end










































    else if (RX_TYPE == "CSI2")      begin        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                necf6a8 <= 0;            else if (ic4c02a & (iea85 == fp13f23))                necf6a8 <= 1;            else if (ic4c02a & (iea85 == cb9f91f))                necf6a8 <= 0;

        end
        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)            begin                nrd7aea <= 0;                ngbd757 <= 0;            end            else            begin                nrd7aea <= zm9962c;                ngbd757 <= nr55b06;            end        end    end
endgenerate

always @(posedge clk_byte_i or negedge reset_byte_n_i)
begin    if (~reset_byte_n_i)    begin        aabcd53 <= 0;        jpe6a99 <= 0;        pu354cf <= 0;        rvaa67a <= 0;    end    else    begin        aabcd53 <= vi42d2a;        jpe6a99 <= uv5b5d4;        pu354cf <= dbba91e;        rvaa67a <= yz23d85;    end
end


generate    if ((NUM_RX_LANE*RX_GEAR*3 == xl37c80) || (NUM_RX_LANE*RX_GEAR*3 == xl37c80*2) || (DT == bye47ef))      begin        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                ay533d6 <= 0;            else if (tja52b7)                ay533d6 <= 0;            else if (yz85aff[1:0] == 2'd2)                ay533d6 <= 0;            else if (an85216)                ay533d6 <= yz85aff + 1'd1;

        end        if ((NUM_RX_LANE*RX_GEAR*3 == xl37c80*2) || ((DT == bye47ef) && (NUM_RX_LANE*RX_GEAR >= 16)))          begin            if (NUM_RX_LANE*RX_GEAR == 8)              begin                always @(posedge clk_byte_i or negedge reset_byte_n_i)                begin                    if (~reset_byte_n_i)                        of6a931 <= 0;                    else if (zm2a148)                        of6a931 <= {1'b0, ph16952, 2'd0};                    else if (an85216 & (yz85aff != 2'd0))                        of6a931 <= rgf10ca - xl37c80/2;

                end                always @(posedge clk_byte_i or negedge reset_byte_n_i)                begin                    if (~reset_byte_n_i)                        je99eb0 <= 0;                    else                        je99eb0 <= an85216 & (yz85aff != 2'd0) & (~rgf10ca[ps7c7e1]) & (|rgf10ca[ps7c7e1-1:0]);	                end            end            else              begin                if ((NUM_RX_LANE*RX_GEAR != 64) && (DT == bye47ef))                  begin                    always @(posedge clk_byte_i or negedge reset_byte_n_i)                    begin                        if (~reset_byte_n_i)                            of6a931 <= 0;                        else if (zm2a148)                            of6a931 <= {1'b0, ph16952};                        else if (an85216 & (yz85aff != 2'd2))                            of6a931 <= rgf10ca - xl37c80/6;

                    end                end                else if (NUM_RX_LANE*RX_GEAR != 64)                  begin                    always @(posedge clk_byte_i or negedge reset_byte_n_i)                    begin                        if (~reset_byte_n_i)                            of6a931 <= 0;                        else if (zm2a148)                            of6a931 <= {1'b0, ph16952};                        else if (an85216 & (yz85aff != 2'd2))                            of6a931 <= rgf10ca - xl37c80/8;

                    end                end                else if (DT == bye47ef)                  begin                    always @(posedge clk_byte_i or negedge reset_byte_n_i)                    begin                        if (~reset_byte_n_i)                            of6a931 <= 0;                        else if (pf50a42)                            of6a931 <= {1'b0, epb4a97};                        else if (zm2a148)                            of6a931 <= {1'b0, ph16952};                        else if (an85216 & (yz85aff != 2'd2))                            of6a931 <= rgf10ca - xl37c80/6;

                    end                end                else                begin                    always @(posedge clk_byte_i or negedge reset_byte_n_i)                      begin                        if (~reset_byte_n_i)                            of6a931 <= 0;                        else if (pf50a42)                            of6a931 <= {1'b0, epb4a97};                        else if (zm2a148)                            of6a931 <= {1'b0, ph16952};                        else if (an85216 & (yz85aff != 2'd2))                            of6a931 <= rgf10ca - xl37c80/8;

                    end                end                always @(posedge clk_byte_i or negedge reset_byte_n_i)                begin                    if (~reset_byte_n_i)                        je99eb0 <= 0;                    else                        je99eb0 <= an85216 & (yz85aff != 2'd2) & (~rgf10ca[16]) & (|rgf10ca[15:0]);	
                end            end        end        else if ((NUM_RX_LANE*RX_GEAR*3 == xl37c80) || ((DT == bye47ef) && (NUM_RX_LANE*RX_GEAR == 8)))          begin            always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (~reset_byte_n_i)                    je99eb0 <= 0;                else                    je99eb0 <= an85216 & (yz85aff == 2'd1);            end        end    end    else if (NUM_RX_LANE*RX_GEAR*5 == xl37c80*4)     begin        if (NUM_RX_LANE*RX_GEAR == 8)          begin            always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (~reset_byte_n_i)                    ay533d6 <= 0;                else if (tja52b7)                    ay533d6 <= 0;                else if (yz85aff[2:0] == 3'd4)                    ay533d6 <= 0;                else if (an85216 | iceffc5)                      ay533d6 <= yz85aff + 1'd1;

            end            always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (~reset_byte_n_i)                    je99eb0 <= 0;                else
                    je99eb0 <= iceffc5 & (yz85aff[2:0] != 3'd2);	            end        end        else if (NUM_RX_LANE*RX_GEAR == 16)         begin            always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (~reset_byte_n_i)                    ay533d6 <= 0;                else if (tja52b7)                    ay533d6 <= 0;                else if (yz85aff[2:0] == 3'd4)                    ay533d6 <= 0;                else if (an85216)                    ay533d6 <= yz85aff + 1'd1;

            end            always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (~reset_byte_n_i)                    je99eb0 <= 0;                else                    je99eb0 <= an85216 & (yz85aff[2:0] != 3'd0);              end        end        else if (NUM_RX_LANE*RX_GEAR == 32)         begin            always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (~reset_byte_n_i)                    ay533d6 <= 0;                else if (tja52b7)                    ay533d6 <= 0;                else if (yz85aff[2:0] == 3'd4)                    ay533d6 <= 0;                else if (an85216)                    ay533d6 <= yz85aff + 1'd1;

            end            always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (~reset_byte_n_i)                    of6a931 <= 0;                else if (zm2a148)                    of6a931 <= {1'b0, ph16952};                else if (an85216 & (yz85aff[2:0] != 3'd4))                    of6a931 <= rgf10ca - xl37c80/8;

            end            always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (~reset_byte_n_i)                    je99eb0 <= 0;                else                je99eb0 <= an85216 & (yz85aff[2:0] != 3'd4) & (~rgf10ca[16]) & (|rgf10ca[15:0]);              end        end    end    else if ((NUM_RX_LANE*RX_GEAR*9 == xl37c80*4) || (NUM_RX_LANE*RX_GEAR*9 == xl37c80*8))     begin        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                ay533d6 <= 0;            else if (tja52b7)                ay533d6 <= 0;            else if (yz85aff[3:0] == 4'd8)                ay533d6 <= 0;            else if (an85216)                ay533d6 <= yz85aff + 1'd1;

        end        if (NUM_RX_LANE*RX_GEAR*9 == xl37c80*4)              always @(posedge clk_byte_i or negedge reset_byte_n_i)            begin                if (~reset_byte_n_i)                    je99eb0 <= 0;                else                    je99eb0 <= an85216 & (yz85aff[0] == 1'd1);	            end        else if (NUM_RX_LANE*RX_GEAR*9 == xl37c80*8)        begin            if (RX_TYPE == "CSI2")              begin                always @(posedge clk_byte_i or negedge reset_byte_n_i)                begin                    if (~reset_byte_n_i)                        of6a931 <= 0;                    else if (zm2a148)                        of6a931 <= {1'b0, ph16952, 2'd0};                    else if (an85216 & (yz85aff[3:0] != 4'd6))                        of6a931 <= rgf10ca - xl37c80/2;

                end                always @(posedge clk_byte_i or negedge reset_byte_n_i)                begin                    if (~reset_byte_n_i)                        je99eb0 <= 0;                    else                        je99eb0 <= an85216 & (yz85aff[3:0] != 4'd6) & (~rgf10ca[ps7c7e1]) & (|rgf10ca[ps7c7e1-1:0]);                  end            end            else              begin                always @(posedge clk_byte_i or negedge reset_byte_n_i)                begin                    if (~reset_byte_n_i)                        of6a931 <= 0;                    else if (zm2a148)                        of6a931 <= {1'b0, ph16952, 2'd0};                    else if (an85216 & (yz85aff[3:0] != 4'd8))                        of6a931 <= rgf10ca - xl37c80/2;

                end                always @(posedge clk_byte_i or negedge reset_byte_n_i)                begin                    if (~reset_byte_n_i)                        je99eb0 <= 0;                    else                        je99eb0 <= an85216 & (yz85aff[3:0] != 4'd8) & (~rgf10ca[ps7c7e1]) & (|rgf10ca[ps7c7e1-1:0]);                  end            end        end    end    else if (NUM_RX_LANE*RX_GEAR == xl37c80)          always @(*)            je99eb0 = an85216;
endgenerate

always @(posedge clk_byte_i or negedge reset_byte_n_i)
begin    if (~reset_byte_n_i)        of7ac13 <= 0;    else if (rv2d7fd)        of7ac13 <= fn5ff7f + 1'd1;


end
always @(posedge clk_byte_i or negedge reset_byte_n_i)
begin    if (~reset_byte_n_i)    begin        mrd609c <= 0;        dbb04e4 <= 0;        wy82726 <= 0;    end    else    begin        mrd609c <= an85216;        dbb04e4 <= eaffbff;        wy82726 <= kdfdff8;    end
end

always @(posedge clk_byte_i or negedge reset_byte_n_i)
begin    if (~reset_byte_n_i)        uk5000 <= 0;    else if (tja52b7)        uk5000 <= tw93991 + 1'b1;


end
generate    if (NUM_RX_LANE*RX_GEAR == 64)    begin        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                hd28000 <= 0;            else if (tja52b7 & (tw93991 == 2'd0))                hd28000 <= 1;            else if (rv2d7fd & db8b5bf)                hd28000 <= 0;

        end        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                fn40007 <= 0;            else if (tja52b7 & (tw93991 == 2'd1))                fn40007 <= 1;            else if (rv2d7fd & jp5adff)                fn40007 <= 0;

        end        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                ou3e <= 0;            else if (tja52b7 & (tw93991 == 2'd2))                ou3e <= 1;            else if (rv2d7fd & mrd6fff)                ou3e <= 0;

        end        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                ie1f0 <= 0;            else if (tja52b7 & (tw93991 == 2'd3))                ie1f0 <= 1;            else if (rv2d7fd & fcb7ffd)                ie1f0 <= 0;

        end        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)            begin                mgf80 <= 0;                yz7c01 <= 0;                ks3e00c <= 0;                icf0061 <= 0;            end            else            begin                mgf80 <= je9cc8b;                yz7c01 <= jpe645a;                ks3e00c <= nt322d6;                icf0061 <= fp916b7;            end        end    end    else    begin        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                hd28000 <= 0;            else if (tja52b7 & (tw93991[0] == 1'd0))                hd28000 <= 1;            else if (rv2d7fd & je9cc8b)                hd28000 <= 0;

        end        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                fn40007 <= 0;            else if (tja52b7 & (tw93991[0] == 1'd1))                fn40007 <= 1;            else if (rv2d7fd & jpe645a)                fn40007 <= 0;

        end    end
endgenerate
generate    if (NUM_RX_LANE*RX_GEAR == 64)    begin        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                sucef05 <= 0;            else if ((tw93991 == 2'd0) & pf50a42)                sucef05 <= epb4a97;            else if ((tw93991 == 2'd0) & zm2a148)                sucef05 <= ph16952;

        end        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                su77828 <= 0;            else if ((tw93991 == 2'd1) & pf50a42)                su77828 <= epb4a97;            else if ((tw93991 == 2'd1) & zm2a148)                su77828 <= ph16952;

        end        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                mgbc140 <= 0;            else if ((tw93991 == 2'd2) & pf50a42)                mgbc140 <= epb4a97;            else if ((tw93991 == 2'd2) & zm2a148)                mgbc140 <= ph16952;

        end        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                uie0a00 <= 0;            else if ((tw93991 == 2'd3) & pf50a42)                uie0a00 <= epb4a97;            else if ((tw93991 == 2'd3) & zm2a148)                uie0a00 <= ph16952;

        end        assign co2e555 = db8b5bf & rv2d7fd;        assign kq72aa8 = jp5adff & rv2d7fd;        assign pf5502f = mrd6fff & rv2d7fd;        assign doa817f = fcb7ffd & rv2d7fd;    end    else    begin        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                sucef05 <= 0;            else if (~tw93991[0] & zm2a148)                sucef05 <= ph16952;

        end        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)                su77828 <= 0;            else if (tw93991[0] & zm2a148)                su77828 <= ph16952;

        end        assign co2e555 = je9cc8b & rv2d7fd;        assign kq72aa8 = jpe645a & rv2d7fd;    end
endgenerate
always @(posedge clk_byte_i or negedge reset_byte_n_i)
begin    if (~reset_byte_n_i)    begin        ip5498d <= 0;        wla4c6c <= 0;        mt26364 <= 0;        ie31b24 <= 0;        ou8d921 <= 0;        rg6c909 <= 0;    end    else    begin        ip5498d <= co24482;        wla4c6c <= ec88652;        mt26364 <= kq43290;        ie31b24 <= nt22411;        ou8d921 <= lqca40f;        rg6c909 <= tu5207b;    end
end
generate    if (NUM_RX_LANE*RX_GEAR == 64)        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)            begin                dz6484a <= 0;                ou24256 <= 0;                co212b1 <= 0;                nt9589 <= 0;                hb4ac4e <= 0;                ic56276 <= 0;            end            else            begin                dz6484a <= wy823a5;                ou24256 <= lf81ed5;                co212b1 <= ouf6af;                nt9589 <= zm11d29;                hb4ac4e <= dmdabcf;                ic56276 <= psd5e7b;            end        end
endgenerate





generate
if (DSI_MODE=="BURST") begin: qt7a12f    assign cb95540 = zkfb87a;    assign fpaaa05 = lqe1e95;    always @(*) begin        if (co24482) begin            fne3faf = 1'b1;        end                else if (facf6b3) begin            fne3faf = 1'b0;        end        else begin            fne3faf = wjdc3d2;        end    end    always @(*) begin        if (nt22411) begin            dmfebf9 = 1'b1;        end                else if (zkdacdf) begin            dmfebf9 = 1'b0;        end        else begin            dmfebf9 = aaf4aa;        end    end        always @(posedge clk_byte_i or negedge reset_byte_n_i)    begin        if (~reset_byte_n_i) begin            ie1fd7f <= 0;            ayf5fca <= 0;        end        else begin            ie1fd7f <= zkfb87a;            ayf5fca <= lqe1e95;        end    end        always @(posedge clk_byte_i or negedge reset_byte_n_i)    begin        if (~reset_byte_n_i) begin            wlb13b0 <= 1'b0;            tw89d84 <= 1'b0;            gb4ec23 <= 1'b0;            by7611c <= 1'b0;        end        else begin            wlb13b0 <= czfd580;            tw89d84 <= dm79ed6;            gb4ec23 <= qi211aa;            by7611c <= zx7b59b;        end    end    if (NUM_RX_LANE*RX_GEAR == 64)    begin        assign zx40bfb = kd7a551;        assign wy5fdf = yz9546f;        always @(*) begin            if (wy823a5) begin                fpafe51 = 1'b1;            end                        else if (ksb37dc) begin                fpafe51 = 1'b0;            end            else begin                fpafe51 = ldd2a8d;            end        end        always @(*) begin            if (zm11d29) begin                rtf947d = 1'b1;            end                        else if (vidf70f) begin                rtf947d = 1'b0;            end            else begin                rtf947d = zzaa37d;            end        end                always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i) begin                of7f28f <= 0;                jcca3ee <= 0;            end            else begin                of7f28f <= kd7a551;                jcca3ee <= yz9546f;            end        end
                always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i) begin                ntb08e3 <= 1'b0;                fp8471f <= 1'b0;                qv238fe <= 1'b0;                vx1c7f5 <= 1'b0;            end            else begin                ntb08e3 <= sw8d0b4;                fp8471f <= kdd66fb;                qv238fe <= ri15e7;                vx1c7f5 <= hd9bee1;            end        end    end
end
else begin: qgf5ee4    if (NUM_RX_LANE*RX_GEAR > PD_BUS_WIDTH*NUM_TX_CH)    begin        assign cb95540 = co24482;        assign fpaaa05 = nt22411;        if (NUM_RX_LANE*RX_GEAR == 64)        begin            assign zx40bfb = wy823a5;            assign wy5fdf = zm11d29;        end    end    else if (NUM_RX_LANE*RX_GEAR*2 > PD_BUS_WIDTH*NUM_TX_CH)    begin        assign cb95540 = co24482 | ec88652;        assign fpaaa05 = nt22411 | lqca40f;        if (NUM_RX_LANE*RX_GEAR == 64)        begin            assign zx40bfb = wy823a5 | lf81ed5;            assign wy5fdf = zm11d29 | dmdabcf;        end    end    else if (NUM_RX_LANE*RX_GEAR*3 > PD_BUS_WIDTH*NUM_TX_CH)    begin        assign cb95540 = co24482 | ec88652 | kq43290;        assign fpaaa05 = nt22411 | lqca40f | tu5207b;        if (NUM_RX_LANE*RX_GEAR == 64)        begin            assign zx40bfb = wy823a5 | lf81ed5 | ouf6af;            assign wy5fdf = zm11d29 | dmdabcf | psd5e7b;        end    end    else    begin        assign cb95540 = co24482 | ec88652 | kq43290 | jr19481;        assign fpaaa05 = nt22411 | lqca40f | tu5207b | gd903da;        if (NUM_RX_LANE*RX_GEAR == 64)        begin            assign zx40bfb = wy823a5 | lf81ed5 | ouf6af | th7b579;            assign wy5fdf = zm11d29 | dmdabcf | psd5e7b | bnaf3da;        end    end
end
endgenerate
always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)    begin        dbc223 <= 0;        fn6111e <= 0;        kf88f7 <= 0;        mr447bd <= 0;        ux23dec <= 0;        zm1ef65 <= 0;        kdf7b2b <= 0;        babd95c <= 0;        rtecae3 <= 0;        cz6571e <= 0;        ks2b8f5 <= 0;        ay5c7a9 <= 0;    end    else    begin        dbc223 <= sj1208e;        fn6111e <= qgffab0;        kf88f7 <= czfd580;        mr447bd <= sueac04;        ux23dec <= me56021;        zm1ef65 <= dbb0108;        kdf7b2b <= yz90474;        babd95c <= pu4235;        rtecae3 <= qi211aa;        cz6571e <= ux8d51;        ks2b8f5 <= me46a8d;        ay5c7a9 <= tw35468;    end
end
generate    if (NUM_RX_LANE*RX_GEAR == 64)        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)            begin                the3d49 <= 0;                ri1ea4f <= 0;                wwf527b <= 0;                swa93d8 <= 0;                me49ec1 <= 0;                dz4f609 <= 0;                jp7b04f <= 0;                dzd827f <= 0;                osc13ff <= 0;                lf9ff8 <= 0;                vv4ffc7 <= 0;                sh7fe3e <= 0;            end            else            begin                the3d49 <= db8e94a;                ri1ea4f <= yx51a16;                wwf527b <= sw8d0b4;                swa93d8 <= su685a0;                me49ec1 <= ne42d01;                dz4f609 <= db1680a;                jp7b04f <= fn74a56;                dzd827f <= tja02bc;                osc13ff <= ri15e7;                lf9ff8 <= gqaf3a;                vv4ffc7 <= by579d0;                sh7fe3e <= ukbce83;            end        end
endgenerate




generate
if (DSI_MODE=="BURST") begin: zk76a39        if (NUM_RX_LANE*RX_GEAR > PD_BUS_WIDTH*NUM_TX_CH*3)    begin        if (NUM_RX_LANE*RX_GEAR == 64)            assign osea583 = (dbb0108 & ~yz80846) | (tw35468 & ~xlaa342) |                                (db1680a & ~mtb4057) | (ukbce83 & ~mre7419);        else            assign osea583 = (dbb0108 & ~yz80846) | (tw35468 & ~xlaa342);    end    else if (NUM_RX_LANE*RX_GEAR > PD_BUS_WIDTH*NUM_TX_CH*2)    begin        if (NUM_RX_LANE*RX_GEAR == 64)            assign osea583 = (me56021 & ~dbb0108) | (me46a8d & ~tw35468) |                                (ne42d01 & ~db1680a) | (by579d0 & ~ukbce83);        else            assign osea583 = (me56021 & ~dbb0108) | (me46a8d & ~tw35468);    end    else if (NUM_RX_LANE*RX_GEAR > PD_BUS_WIDTH*NUM_TX_CH)    begin        if (NUM_RX_LANE*RX_GEAR == 64)            assign osea583 = (sueac04 & ~me56021) | (ux8d51 & ~me46a8d) |                                (su685a0 & ~ne42d01) | (gqaf3a & ~by579d0);        else            assign osea583 = (sueac04 & ~me56021) | (ux8d51 & ~me46a8d);    end    else    begin        if (NUM_RX_LANE*RX_GEAR == 64)            assign osea583 = (czfd580 & ~sueac04) | (qi211aa & ~ux8d51) |                                (sw8d0b4 & ~su685a0) | (ri15e7 & ~gqaf3a);        else            assign osea583 = (czfd580 & ~sueac04) | (qi211aa & ~ux8d51);    end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i) begin        if (!reset_pixel_n_i) begin            zm9cfcf <= 0;        end        else begin            zm9cfcf <= tuee2b5;        end    end    assign dm5d4b0 = aledc4a;
end


else begin: xj7ef9f    if (NUM_RX_LANE*RX_GEAR > PD_BUS_WIDTH*NUM_TX_CH*3)    begin        if (NUM_RX_LANE*RX_GEAR == 64)            assign dm5d4b0 = (dbb0108 & ~yz80846) | (tw35468 & ~xlaa342) |                                (db1680a & ~mtb4057) | (ukbce83 & ~mre7419);        else            assign dm5d4b0 = (dbb0108 & ~yz80846) | (tw35468 & ~xlaa342);    end    else if (NUM_RX_LANE*RX_GEAR > PD_BUS_WIDTH*NUM_TX_CH*2)    begin        if (NUM_RX_LANE*RX_GEAR == 64)            assign dm5d4b0 = (me56021 & ~dbb0108) | (me46a8d & ~tw35468) |                                (ne42d01 & ~db1680a) | (by579d0 & ~ukbce83);        else            assign dm5d4b0 = (me56021 & ~dbb0108) | (me46a8d & ~tw35468);    end    else if (NUM_RX_LANE*RX_GEAR > PD_BUS_WIDTH*NUM_TX_CH)    begin        if (NUM_RX_LANE*RX_GEAR == 64)            assign dm5d4b0 = (sueac04 & ~me56021) | (ux8d51 & ~me46a8d) |                                (su685a0 & ~ne42d01) | (gqaf3a & ~by579d0);        else            assign dm5d4b0 = (sueac04 & ~me56021) | (ux8d51 & ~me46a8d);    end    else    begin        if (NUM_RX_LANE*RX_GEAR == 64)            assign dm5d4b0 = (czfd580 & ~sueac04) | (qi211aa & ~ux8d51) |                                (sw8d0b4 & ~su685a0) | (ri15e7 & ~gqaf3a);        else            assign dm5d4b0 = (czfd580 & ~sueac04) | (qi211aa & ~ux8d51);    end
end
endgenerate

generate    if (NUM_RX_LANE*RX_GEAR == 64)        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)            begin                sj8f4a1 <= 0;                yx7a50d <= 0;                thd286d <= 0;                lf9436f <= 0;                yza1b7f <= 0;                cbdbfc <= 0;                yk6dfe5 <= 0;                gb6ff28 <= 0;                wj7f945 <= 0;                zxfca2c <= 0;                yke5167 <= 0;                hd28b39 <= 0;                bl459ce <= 0;                oh2ce77 <= 0;                cm673bc <= 0;                ir39de0 <= 0;            end            else            begin                sj8f4a1 <= (tw93991 == 2'd0) & tja52b7;                yx7a50d <= yk4c354;                thd286d <= rt61aa0;                lf9436f <= yzd506;                yza1b7f <= (tw93991 == 2'd1) & tja52b7;                cbdbfc <= yx541a5;                yk6dfe5 <= zza0d2d;                gb6ff28 <= lf696e;                wj7f945 <= (tw93991 == 2'd2) & tja52b7;                zxfca2c <= hda5bb1;                yke5167 <= xl2dd8e;                hd28b39 <= zx6ec76;                bl459ce <= (tw93991 == 2'd3) & tja52b7;                oh2ce77 <= kfb1dbb;                cm673bc <= hd8eddd;                ir39de0 <= jc76eee;            end        end    else        always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i)            begin                sj8f4a1 <= 0;                yx7a50d <= 0;                thd286d <= 0;                lf9436f <= 0;                yza1b7f <= 0;                cbdbfc <= 0;                yk6dfe5 <= 0;                gb6ff28 <= 0;            end            else            begin                sj8f4a1 <= (tw93991[0] == 1'd0) & tja52b7;                yx7a50d <= yk4c354;                thd286d <= rt61aa0;                lf9436f <= yzd506;                yza1b7f <= (tw93991[0] == 1'd1) & tja52b7;                cbdbfc <= yx541a5;                yk6dfe5 <= zza0d2d;                gb6ff28 <= lf696e;            end        end
endgenerate
generate
if (DSI_MODE=="BURST") begin: ph285b2    assign sh7f7cb = ho697a4;    assign vifbe5d = mr5e91c;    always @(*) begin        if ((tw93991[0] == 1'd0) & tja52b7 & !pf4adfd) begin            qia499 = 1'b1;        end                else if (qi8df74) begin            qia499 = 1'b0;        end        else begin            qia499 = en4bd23;        end    end    always @(*) begin        if ((tw93991[0] == 1'd1) & tja52b7 & !sj295bf) begin            mg9264a = 1'b1;        end                else if (kq7dd0d) begin            mg9264a = 1'b0;        end        else begin            mg9264a = jcf48e5;        end    end        always @(posedge clk_byte_i or negedge reset_byte_n_i)    begin        if (~reset_byte_n_i) begin            ho524c9 <= 0;            ba93250 <= 0;        end        else begin            ho524c9 <= ho697a4;            ba93250 <= mr5e91c;        end    end        always @(posedge clk_byte_i or negedge reset_byte_n_i)    begin        if (~reset_byte_n_i) begin            en51f73 <= 1'b0;            qv8fb9c <= 1'b0;            cm7dce4 <= 1'b0;            xwee721 <= 1'b0;        end        else begin            en51f73 <= pu30b06;            qv8fb9c <= of51bee;            cm7dce4 <= yxed9e0;            xwee721 <= ip6fba1;        end    end    if (NUM_RX_LANE*RX_GEAR == 64)    begin        assign psdf2ea = yza472b;        assign fnf9752 = tj1caed;        always @(*) begin            if ((tw93991 == 2'd2) & tja52b7 & !pf4adfd) begin                ri99282 = 1'b1;            end                        else if (vv7434b) begin                ri99282 = 1'b0;            end            else begin                ri99282 = gd2395d;            end        end        always @(*) begin            if ((tw93991 == 2'd3) & tja52b7 & !ui56fee) begin                rt4a09c = 1'b1;            end                        else if (kfd2f4) begin                rt4a09c = 1'b0;            end            else begin                rt4a09c = ice576e;            end        end                always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i) begin                yxc9413 <= 0;                rt504e7 <= 0;            end            else begin                yxc9413 <= yza472b;                rt504e7 <= tj1caed;            end        end
                always @(posedge clk_byte_i or negedge reset_byte_n_i)        begin            if (~reset_byte_n_i) begin                xw7390a <= 1'b0;                ba9c852 <= 1'b0;                vie4292 <= 1'b0;                gq21493 <= 1'b0;            end            else begin                xw7390a <= do11816;                ba9c852 <= jcee869;                vie4292 <= ir95999;                gq21493 <= mta1a5e;            end        end    end
end
else begin: bn228ad    if (NUM_RX_LANE*RX_GEAR == 64)    begin        if (NUM_RX_LANE*RX_GEAR > PD_BUS_WIDTH*NUM_TX_CH)        begin            assign sh7f7cb = (tw93991 == 2'd0) & tja52b7 & !rib7f71 | yk4c354;            assign vifbe5d = (tw93991 == 2'd1) & tja52b7 & !sj295bf | yx541a5;            assign psdf2ea = (tw93991 == 2'd2) & tja52b7 & !pf4adfd | hda5bb1;            assign fnf9752 = (tw93991 == 2'd3) & tja52b7 & !ui56fee | kfb1dbb;        end        else if (NUM_RX_LANE*RX_GEAR*2 > PD_BUS_WIDTH*NUM_TX_CH)        begin            assign sh7f7cb = ((tw93991 == 2'd0) & tja52b7 & !rib7f71) | yk4c354 | rt61aa0;            assign vifbe5d = ((tw93991 == 2'd1) & tja52b7 & !sj295bf) | yx541a5 | zza0d2d;            assign psdf2ea = ((tw93991 == 2'd2) & tja52b7 & !pf4adfd) | hda5bb1 | xl2dd8e;            assign fnf9752 = ((tw93991 == 2'd3) & tja52b7 & !ui56fee) | kfb1dbb | hd8eddd;        end        else if (NUM_RX_LANE*RX_GEAR*3 > PD_BUS_WIDTH*NUM_TX_CH)        begin            assign sh7f7cb = ((tw93991 == 2'd0) & tja52b7 & !rib7f71) | yk4c354 | rt61aa0 | yzd506;            assign vifbe5d = ((tw93991 == 2'd1) & tja52b7 & !sj295bf) | yx541a5 | zza0d2d | lf696e;            assign psdf2ea = ((tw93991 == 2'd2) & tja52b7 & !pf4adfd) | hda5bb1 | xl2dd8e | zx6ec76;            assign fnf9752 = ((tw93991 == 2'd3) & tja52b7 & !ui56fee) | kfb1dbb | hd8eddd | jc76eee;        end        else        begin            assign sh7f7cb = ((tw93991 == 2'd0) & tja52b7 & !rib7f71) | yk4c354 | rt61aa0 | yzd506 | qt6a834;            assign vifbe5d = ((tw93991 == 2'd1) & tja52b7 & !sj295bf) | yx541a5 | zza0d2d | lf696e | ks34b76;            assign psdf2ea = ((tw93991 == 2'd2) & tja52b7 & !pf4adfd) | hda5bb1 | xl2dd8e | zx6ec76 | rg763b7;            assign fnf9752 = ((tw93991 == 2'd3) & tja52b7 & !ui56fee) | kfb1dbb | hd8eddd | jc76eee | twb7772;        end    end    else    begin        if (NUM_RX_LANE*RX_GEAR > PD_BUS_WIDTH*NUM_TX_CH)        begin            assign sh7f7cb = (tw93991[0] == 1'd0) & tja52b7 & !pf4adfd| yk4c354;            assign vifbe5d = (tw93991[0] == 1'd1) & tja52b7 & !sj295bf| yx541a5;        end        else if (NUM_RX_LANE*RX_GEAR*2 > PD_BUS_WIDTH*NUM_TX_CH)        begin            assign sh7f7cb = ((tw93991[0] == 1'd0) & tja52b7 & !pf4adfd) | yk4c354 | rt61aa0;            assign vifbe5d = ((tw93991[0] == 1'd1) & tja52b7 & !sj295bf) | yx541a5 | zza0d2d;        end        else if (NUM_RX_LANE*RX_GEAR*3 > PD_BUS_WIDTH*NUM_TX_CH)        begin            assign sh7f7cb = ((tw93991[0] == 1'd0) & tja52b7 & !pf4adfd) | yk4c354 | rt61aa0 | yzd506;            assign vifbe5d = ((tw93991[0] == 1'd1) & tja52b7 & !sj295bf) | yx541a5 | zza0d2d | lf696e;        end        else        begin            assign sh7f7cb = ((tw93991[0] == 1'd0) & tja52b7 & !pf4adfd) | yk4c354 | rt61aa0 | yzd506 | qt6a834;            assign vifbe5d = ((tw93991[0] == 1'd1) & tja52b7 & !sj295bf) | yx541a5 | zza0d2d | lf696e | ks34b76;        end    end
end
endgenerate

always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)    begin        gd39d16 <= 0;        cmce8b5 <= 0;        xj745a8 <= 0;        baa2d46 <= 0;        fp16a33 <= 0;        dbb519f <= 0;        xya8cfe <= 0;        ww467f2 <= 0;        an33f91 <= 0;        an9fc8c <= 0;        rgfe465 <= 0;        off232b <= 0;        nt9195d <= 0;        je8caee <= 0;    end    else    begin        gd39d16 <= sj295bf;        cmce8b5 <= dze6160;        xj745a8 <= pu30b06;        baa2d46 <= ux85833;        fp16a33 <= kf2c19d;        dbb519f <= cz60ced;        xya8cfe <= jr676c;        ww467f2 <= pf4adfd;        an33f91 <= ym9db3c;        an9fc8c <= yxed9e0;        rgfe465 <= fa6cf04;        off232b <= ic67822;        nt9195d <= ir3c111;        je8caee <= ose088c;    end
end
generate    if (NUM_RX_LANE*RX_GEAR == 64)        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)            begin                en65773 <= 0;                aa2bb9d <= 0;                zk5dce9 <= 0;                faee74a <= 0;                jc73a52 <= 0;                sw9d292 <= 0;                hbe9491 <= 0;                fn4a48f <= 0;                xw5247f <= 0;                ks923fa <= 0;                nt91fd0 <= 0;                kf8fe86 <= 0;                ip7f434 <= 0;                sufa1a5 <= 0;            end            else            begin                en65773 <= ui56fee;                aa2bb9d <= vx22302;                zk5dce9 <= do11816;                faee74a <= hq8c0b2;                jc73a52 <= kd60592;                sw9d292 <= yz2c95;                hbe9491 <= nt164ac;                fn4a48f <= rib7f71;                xw5247f <= wy92b33;                ks923fa <= ir95999;                nt91fd0 <= ukacccc;                kf8fe86 <= zk66660;                ip7f434 <= kf33302;                sufa1a5 <= fc99815;            end        end
endgenerate


generate    if (NUM_RX_LANE*RX_GEAR > PD_BUS_WIDTH*NUM_TX_CH*3)    begin        if (NUM_RX_LANE*RX_GEAR == 64)            assign qgcba96 = (jr676c & ~an33b67) | (ose088c & ~zm4460) |                                (nt164ac & ~jeb2566) | (fc99815 & ~czcc0aa);        else            assign qgcba96 = (jr676c & ~an33b67) | (ose088c & ~zm4460);    end    else if (NUM_RX_LANE*RX_GEAR > PD_BUS_WIDTH*NUM_TX_CH*2)    begin        if (NUM_RX_LANE*RX_GEAR == 64)            assign qgcba96 = (kf2c19d & ~cz60ced) | (ic67822 & ~ir3c111) |                                (kd60592 & ~yz2c95) | (zk66660 & ~kf33302);        else            assign qgcba96 = (kf2c19d & ~cz60ced) | (ic67822 & ~ir3c111);    end    else if (NUM_RX_LANE*RX_GEAR > PD_BUS_WIDTH*NUM_TX_CH)    begin        if (NUM_RX_LANE*RX_GEAR == 64)            assign qgcba96 = (pu30b06 & ~ux85833) | (yxed9e0 & ~fa6cf04) |                                (do11816 & ~hq8c0b2) | (ir95999 & ~ukacccc);        else            assign qgcba96 = (pu30b06 & ~ux85833) | (yxed9e0 & ~fa6cf04);    end    else    begin        if (NUM_RX_LANE*RX_GEAR == 64)            assign qgcba96 = (pu30b06 & ~ux85833) | (yxed9e0 & ~fa6cf04) |                                (do11816 & ~hq8c0b2) | (ir95999 & ~ukacccc);        else            assign qgcba96 = (pu30b06 & ~ux85833) | (yxed9e0 & ~fa6cf04);    end
endgenerate


always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)        ofdc9ce <= 0;    else if (hdbfb8a)          ofdc9ce <= mt29730 + 1'b1;


end
generate    if (NUM_RX_LANE*RX_GEAR == 64)    begin        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                vid0d29 <= 0;            else if (hdbfb8a & (mt29730 == 2'd0))                  vid0d29 <= anbbb93;

        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                vk8694a <= 0;            else if (hdbfb8a & (mt29730 == 2'd1))                  vk8694a <= fnddc9c;

        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                mg34a52 <= 0;            else if (hdbfb8a & (mt29730 == 2'd2))                  mg34a52 <= byee4e6;

        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                xla5291 <= 0;            else if (hdbfb8a & (mt29730 == 2'd3))                  xla5291 <= cm72732;

        end    end    else    begin        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                vid0d29 <= 0;            else if (hdbfb8a & (mt29730[0] == 1'd0))                  vid0d29 <= anbbb93;

        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                vk8694a <= 0;            else if (hdbfb8a & (mt29730[0] == 1'd1))                  vk8694a <= fnddc9c;

        end    end
endgenerate

generate    if (((xl37c80 == 10) || (xl37c80 == 12) || (xl37c80 == 18) || (xl37c80 == 20) || (xl37c80 == 36)) && (DT != bye47ef))    begin        assign xy2f42e = {wj60554, 2'd0};        assign yx7a172 = {qv2aa5, 2'd0};        assign vxb061a = zza587c - xl37c80/2;          assign ls830d6 = dz61f35 - xl37c80/2;          if (NUM_RX_LANE*RX_GEAR == 64)        begin            assign rgd0b95 = {ym1552c, 2'd0};            assign qv85caa = {zzaa961, 2'd0};            assign qv186b3 = ne7cd70 - xl37c80/2;              assign qtc359d = pu35c1f - xl37c80/2;          end    end    else    begin        assign xy2f42e = wj60554;        assign yx7a172 = qv2aa5;        if (NUM_RX_LANE*RX_GEAR == 64)        begin            assign rgd0b95 = ym1552c;            assign qv85caa = zzaa961;        end        if (DT == bye47ef)        begin            assign vxb061a = zza587c - xl37c80/6;              assign ls830d6 = dz61f35 - xl37c80/6;              if (NUM_RX_LANE*RX_GEAR == 64)            begin                assign qv186b3 = ne7cd70 - xl37c80/6;                  assign qtc359d = pu35c1f - xl37c80/6;              end        end        else        begin            assign vxb061a = zza587c - xl37c80/8;              assign ls830d6 = dz61f35 - xl37c80/8;              if (NUM_RX_LANE*RX_GEAR == 64)            begin                assign qv186b3 = ne7cd70 - xl37c80/8;                  assign qtc359d = pu35c1f - xl37c80/8;              end        end    end
endgenerate

always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)        vie4e74 <= 0;    else if (ipfdc56)          vie4e74 <= sh4b985 + 1'b1;


end
always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)        zm2596d <= 0;    else        zm2596d <= ~(|yk56ab4[ps7c7e1-1:0]);
end
generate    if (NUM_RX_LANE*RX_GEAR == 64)        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                ld4a47d <= 0;            else if (ipfdc56 & (sh4b985 == 2'd0))                  ld4a47d <= wlae00b;            else if (twb2d0d & (sh4b985 == 2'd1))                ld4a47d <= yk56ab4;

        end    else        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                ld4a47d <= 0;            else if (ipfdc56 & (sh4b985[0] == 1'd0))                  ld4a47d <= wlae00b;            else if (twb2d0d & (sh4b985[0] == 1'd1))                ld4a47d <= yk56ab4;

        end
endgenerate
always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)        kf2cb6a <= 0;    else        kf2cb6a <= ~(|tjaad0e[ps7c7e1-1:0]);
end
generate    if (NUM_RX_LANE*RX_GEAR == 64)        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                tu523ef <= 0;            else if (ipfdc56 & (sh4b985 == 2'd1))                  tu523ef <= yz802e4;            else if (twb2d0d & (sh4b985 == 2'd2))                tu523ef <= tjaad0e;

        end    else        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                tu523ef <= 0;            else if (ipfdc56 & (sh4b985[0] == 1'd1))                  tu523ef <= yz802e4;            else if (twb2d0d & (sh4b985[0] == 1'd0))                tu523ef <= tjaad0e;

        end
endgenerate
generate    if (NUM_RX_LANE*RX_GEAR == 64)    begin        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                yx65b54 <= 0;            else                yx65b54 <= ~(|sjb43b9[ps7c7e1-1:0]);        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                hd91f7a <= 0;            else if (ipfdc56 & (sh4b985 == 2'd2))                  hd91f7a <= lsb922;            else if (twb2d0d & (sh4b985 == 2'd3))                hd91f7a <= sjb43b9;

        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                db2daa4 <= 0;            else                db2daa4 <= ~(|zmee64[ps7c7e1-1:0]);        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                oh8fbd6 <= 0;            else if (ipfdc56 & (sh4b985 == 2'd3))                  oh8fbd6 <= vie4890;            else if (twb2d0d & (sh4b985 == 2'd0))                oh8fbd6 <= zmee64;

        end    end
endgenerate

generate    if (NUM_RX_LANE*RX_GEAR == 64)        assign dm52c18 = (sh4b985 == 2'd1) ? (vk9686a & (zza587c[ps7c7e1] | aa1051e)) :                               (sh4b985 == 2'd2) ? (vk9686a & (dz61f35[ps7c7e1] | mg828f1)) :                               (sh4b985 == 2'd3) ? (vk9686a & (ne7cd70[ps7c7e1] | tw14788)) :
                                                       (vk9686a & (pu35c1f[ps7c7e1] | iea3c43)) ;    else        assign dm52c18 = (sh4b985[0] == 1'd1) ? (vk9686a & (zza587c[ps7c7e1] | aa1051e)) :
                                                          (vk9686a & (dz61f35[ps7c7e1] | mg828f1)) ;
endgenerate
        

always @(posedge clk_pixel_i or negedge reset_pixel_n_i)  
begin    if (~reset_pixel_n_i)        anabee3 <= 0;    else if (th715aa)        anabee3 <= 1;    else if (fc1137e)        anabee3 <= 0;


end

always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)        mt80308 <= 0;    else if (ipfdc56)        mt80308 <= 1;    else if (phbffea & th715aa)        mt80308 <= 0;


end
always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)    begin        pf6eda5 <= 0;        ps76d2f <= 0;        oub697a <= 0;    end    else    begin        pf6eda5 <= twb2d0d & th715aa;        ps76d2f <= zx5f535;        oub697a <= eafa9ae;    end
end

always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)    begin
        lqf4370 <= 0;        kfa1b82   <= 0;        uxdc14   <= 0;
        mr7052e <= 0;        qi82974 <= 0;        zm14ba0 <= 0;        dba5d02 <= 0;
        jp740b1 <= 0;        vxa058e   <= 0;        ir2c77   <= 0;
        anb1de6 <= 0;        fp8ef35 <= 0;        su779ae <= 0;        mgbcd70 <= 0;        ble6b81 <= 0;        do35c0f <= 0;        cbae07b <= 0;        mr703dc <= 0;        tj81ee4 <= 0;        aaf727 <= 0;        ld7b939 <= 0;    end    else    begin
        lqf4370 <= tj198db;        kfa1b82   <= qt60d93;        uxdc14   <= ho636f4;
        mr7052e <= ykdbd12;        qi82974 <= ayde891;        zm14ba0 <= rgf4489;        dba5d02 <= fca244a;
        jp740b1 <= hd91294;        vxa058e   <= ir364e6;        ir2c77   <= nr4a53a;
        anb1de6 <= jr94ebb;        fp8ef35 <= doa75de;        su779ae <= pu3aef2;        mgbcd70 <= vvd7792;        ble6b81 <= jead836;        do35c0f <= wwde4b4;        cbae07b <= ipf25a0;        mr703dc <= ou92d05;        tj81ee4 <= vk96829;        aaf727 <= anb414b;        ld7b939 <= bna0a5c;    end
end

always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)        pf6e0a5 <= 0;    else if (kdcc6de)        pf6e0a5 <= 1;    else if (vk1b7a2)        pf6e0a5 <= 0;
end

generate
if (DSI_MODE == "NONBURST_PULSES") begin: mre8bd0    always @(posedge clk_pixel_i or negedge reset_pixel_n_i)    begin        if (~reset_pixel_n_i)            ph163bc <= 0;        else if (kdcc6de | vk1b7a2| ri894a7)            ph163bc <= 1;        else if (jc529d7)            ph163bc <= 0;    end
end
else begin: uxbe4fb    always @(posedge clk_pixel_i or negedge reset_pixel_n_i)    begin        if (!reset_pixel_n_i) begin            xjc2259 <= 0;        end        else if (gq97bd3 == HSA-2'd1) begin            xjc2259 <= 0;        end        else if (ri894a7 || kdcc6de || |gq97bd3) begin            xjc2259 <= gq97bd3 + 1'b1;        end    end    always @(posedge clk_pixel_i or negedge reset_pixel_n_i)    begin        if (!reset_pixel_n_i) begin            zk73089 <= 0;        end        else if (!jr94ebb) begin            zk73089 <= 0;        end        else if (gq97bd3 == HSA-2'd1) begin            zk73089 <= 1'b1;        end    end    always @(posedge clk_pixel_i or negedge reset_pixel_n_i)    begin        if (~reset_pixel_n_i)            ph163bc <= 0;        else if (kdcc6de | vk1b7a2| ri894a7)            ph163bc <= 1;        else if (fc2a5ef)            ph163bc <= 0;    end
end
endgenerate
always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)        fp273a2 <= 0;    else        fp273a2 <= sh4b985;
end


generate    if (xl37c80 == PD_BUS_WIDTH*NUM_TX_CH)          always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                bl5f71d <= 0;            else if (phbffea & (sh4b985 != su5cc2c))                  bl5f71d <= 1;            else if (twb2d0d & th715aa)                bl5f71d <= 0;            else                bl5f71d <= phbffea;        end    else if (xl37c80 == PD_BUS_WIDTH*NUM_TX_CH*2)          always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                bl5f71d <= 0;            else if (phbffea & (sh4b985 != su5cc2c))                  bl5f71d <= 1;            else if (th715aa)                bl5f71d <= 0;            else if (phbffea)                bl5f71d <= ~twb2d0d;            else                bl5f71d <= 0;        end    else if (xl37c80 == PD_BUS_WIDTH*NUM_TX_CH*3)      begin        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                sw8273f <= 0;            else                sw8273f <= ipfdc56;        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                gbe7e7a <= 0;            else if (gq2bb71)                gbe7e7a <= 2'd1;            else if (phbffea)            begin                if ((xj6e254[1:0] == 2'd2))                    gbe7e7a <= 0;                else                    gbe7e7a <= xj6e254 + 1'd1;            end            else                gbe7e7a <= 0;        end
        assign fa69805 = (xj6e254[1:0] == 2'd2);        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                bl5f71d <= 0;            else if (phbffea)            begin                if (cb365a1)                    bl5f71d <= 0;                else                    bl5f71d <= (xj6e254[1:0] == 2'd0);            end            else                bl5f71d <= 0;        end    end    else if (xl37c80 == PD_BUS_WIDTH*NUM_TX_CH*4)      begin        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                gbe7e7a <= 0;            else if (ipfdc56)                gbe7e7a <= 0;            else if (phbffea | (~cb365a1 & (xj6e254[1:0] != 0)))                     gbe7e7a <= xj6e254 + 1'd1;            else                gbe7e7a <= 0;        end        assign fa69805 = (xj6e254[1:0] == 2'd3);        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                bl5f71d <= 0;            else if (phbffea)            begin                if (cb365a1)                    bl5f71d <= 0;                else                    bl5f71d <= (xj6e254[1:0] == 2'd0);            end            else                bl5f71d <= 0;        end    end
endgenerate
generate    if (xl37c80 == PD_BUS_WIDTH*NUM_TX_CH)          always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                sud41f2 <= 0;            else if (th715aa & twb2d0d)                sud41f2 <= db81255;            else if (twb2d0d)                sud41f2 <= db81255 + 1'd1;

        end    else        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                sud41f2 <= 0;            else if (twb2d0d)                sud41f2 <= db81255 + 1'd1;

        end
endgenerate

generate    if (NUM_RX_LANE*RX_GEAR == 64)	begin        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                oh95f10 <= 0;            else if (xy9c921)                oh95f10 <= 0;            else                oh95f10 <= (su5cc2c == 2'd1) & twb2d0d & yk56ab4[ps7c7e1];        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                tjaf884 <= 0;            else if (pse490a)                tjaf884 <= 0;            else                tjaf884 <= (su5cc2c == 2'd2) & twb2d0d & tjaad0e[ps7c7e1];        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                vi7c427 <= 0;            else if (gq24852)                vi7c427 <= 0;            else                vi7c427 <= (su5cc2c == 2'd3) & twb2d0d & sjb43b9[ps7c7e1];        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                qte213a <= 0;            else if (mg24290)                qte213a <= 0;            else                qte213a <= (su5cc2c == 2'd0) & twb2d0d & zmee64[ps7c7e1];        end    end    else    begin        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                oh95f10 <= 0;            else if (xy9c921)                oh95f10 <= 0;            else                oh95f10 <= (sh4b985[0] == 1'd1) & twb2d0d & yk56ab4[ps7c7e1];        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                tjaf884 <= 0;            else if (pse490a)                tjaf884 <= 0;            else                tjaf884 <= (sh4b985[0] == 1'd0) & twb2d0d & tjaad0e[ps7c7e1];        end    end
endgenerate

generate        if ((xl37c80 == 48) || ((RX_TYPE == "DSI") && (xl37c80 < 72 ) && (xl37c80 > PD_BUS_WIDTH) && ((DT == bye47ef) || (DT == jpfc8fd))))    begin        if (NUM_RX_LANE*RX_GEAR == 64)        begin            always @(posedge clk_pixel_i or negedge reset_pixel_n_i)                if (~reset_pixel_n_i)                    ld74376 <= 0;                else                    ld74376 <= xy9c921 | pse490a | gq24852 | mg24290;        end        else        begin            always @(posedge clk_pixel_i or negedge reset_pixel_n_i)                if (~reset_pixel_n_i)                    ld74376 <= 0;                else                    ld74376 <= xy9c921 | pse490a;        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)            begin                kfa1bb6 <= 0;                uxddb4 <= 0;            end            else            begin                kfa1bb6 <= sj36afa;                uxddb4 <= phb57d4;            end        end
        if (NUM_TX_CH == 1)            if ((DT == jpfc8fd) && (xl37c80 == PD_BUS_WIDTH))            assign ened300 = ~icd4d70 & ana1a9c;          else            assign ened300 = qvabea6 ? 0 : ana1a9c | sjd4e4;        else if (NUM_TX_CH == 2)          begin            always @(posedge clk_pixel_i or negedge reset_pixel_n_i)            begin                if (~reset_pixel_n_i)                    irb4bd0 <= 0;                else                    irb4bd0 <= {1'b0, phb57d4};            end            assign ened300 = ~icd4d70 & ana1a9c;        end    end        else if ((NUM_RX_LANE*RX_GEAR == 64) && ((xl37c80 == 96) || (xl37c80 == 72 ) && ((DT == bye47ef) || (DT == jpfc8fd))))    begin        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                bn13931 <= 0;            else if (xy9c921)                case (zza587c[1:0])
                    2'b11 : bn13931 <= 2'b01;                      2'b10 : bn13931 <= 2'b10;                      2'b01 : bn13931 <= 2'b11;                      default : bn13931 <= 2'b00;                  endcase            else if (pse490a)                case (dz61f35[1:0])
                    2'b11 : bn13931 <= 2'b01;                      2'b10 : bn13931 <= 2'b10;                      2'b01 : bn13931 <= 2'b11;                      default : bn13931 <= 2'b00;                  endcase            else if (gq24852)                case (ne7cd70[1:0])
                    2'b11 : bn13931 <= 2'b01;                      2'b10 : bn13931 <= 2'b10;                      2'b01 : bn13931 <= 2'b11;                      default : bn13931 <= 2'b00;                  endcase            else if (mg24290)                case (pu35c1f[1:0])
                    2'b11 : bn13931 <= 2'b01;                      2'b10 : bn13931 <= 2'b10;                      2'b01 : bn13931 <= 2'b11;                      default : bn13931 <= 2'b00;                  endcase            else                bn13931 <= 2'b00;        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)            begin                ou109d4 <= 0;                tj84ea0 <= 0;                db27507 <= 0;                vk9c98f <= 0;                zke4c7a <= 0;            end            else            begin
                ou109d4 <= xy9c921 | pse490a | gq24852 | mg24290;                tj84ea0 <= mg21481;                db27507 <= mga409;                vk9c98f <= mr7fe29;                zke4c7a <= uiff14c;            end        end        if (NUM_TX_CH == 1)         begin            assign ened300 = ana1a9c | (sjd4e4 & (~^mrf8a61));            always @(posedge clk_pixel_i or negedge reset_pixel_n_i)            begin                if (~reset_pixel_n_i)                    irb4bd0 <= 2'b00;                else if (uiff14c == 2'b01)                      irb4bd0 <= 2'b01;                else if (mrf8a61 == 2'b11)                      irb4bd0 <= 2'b01;                else                    irb4bd0 <= 2'b00;            end        end        else if (NUM_TX_CH == 2)         begin            assign ened300 = ~icd4d70 & ana1a9c;            always @(posedge clk_pixel_i or negedge reset_pixel_n_i)            begin                if (~reset_pixel_n_i)                    irb4bd0 <= 2'b00;                else                    irb4bd0 <= uiff14c;            end        end    end    else if (xl37c80 == PD_BUS_WIDTH)         assign ened300 = ~icd4d70 & ana1a9c;    else if ((xl37c80 == PD_BUS_WIDTH*NUM_TX_CH*4) && (xl37c80 == 40))         assign ened300 = ana1a9c | sjd4e4 | uv6a724 | yk53924;    else if ((xl37c80 == 32) && ((xl37c80 == PD_BUS_WIDTH*NUM_TX_CH*NUM_RX_LANE)))      begin        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                bn13931 <= 0;            else if (xy9c921)                case (zza587c[1:0])
                    2'b01 : bn13931 <= 2'b01;                      2'b10 : bn13931 <= 2'b10;                      2'b11 : bn13931 <= 2'b11;                      default : bn13931 <= 2'b00;                  endcase            else if (pse490a)                case (dz61f35[1:0])
                    2'b01 : bn13931 <= 2'b01;                      2'b10 : bn13931 <= 2'b10;                      2'b11 : bn13931 <= 2'b11;                      default : bn13931 <= 2'b00;                  endcase

            else                bn13931 <= 2'b00;        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)            begin                vk9c98f <= 0;                zke4c7a <= 0;                kf263d2 <= 0;                sw31e94 <= 0;            end            else            begin                vk9c98f <= mr7fe29;                zke4c7a <= uiff14c;                kf263d2 <= mrf8a61;                sw31e94 <= zkc530d;            end        end        if (RX_GEAR==16) begin            assign ened300 = ana1a9c | (sjd4e4 & (mrf8a61 == 2'b00));        end        else begin            assign ened300 = ana1a9c | (sjd4e4 & (mrf8a61 != 2'b01)) |                         (uv6a724 & (~(^zkc530d))) | (yk53924 & (ux2986a == 2'b00));        end    end    else if ((xl37c80 == 16) && (xl37c80 == PD_BUS_WIDTH*NUM_TX_CH*2))     begin        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                bn13931 <= 0;            else if (xy9c921)                case (zza587c[0])
                    1'b1 : bn13931 <= 2'b01;                      default : bn13931 <= 2'b00;                  endcase            else if (pse490a)                case (dz61f35[0])
                    1'b1 : bn13931 <= 2'b01;                      default : bn13931 <= 2'b00;                  endcase

            else                bn13931 <= 2'b00;        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)            begin                vk9c98f <= 0;                zke4c7a <= 0;            end            else            begin                vk9c98f <= mr7fe29;                zke4c7a <= uiff14c;            end        end        assign ened300 = ana1a9c | (sjd4e4 & (mrf8a61[0] == 1'b0));    end    else if (xl37c80 == PD_BUS_WIDTH*NUM_TX_CH*2)          assign ened300 = ana1a9c | sjd4e4;    else if (xl37c80 == PD_BUS_WIDTH*NUM_TX_CH*3)      begin        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)                bn13931 <= 0;            else if (xy9c921)                case (zza587c[2:1])
                    2'b10 : bn13931 <= 2'b01;                      2'b01 : bn13931 <= 2'b10;                      default : bn13931 <= 2'b00;                  endcase            else if (pse490a)                case (dz61f35[2:1])
                    2'b10 : bn13931 <= 2'b01;                      2'b01 : bn13931 <= 2'b10;                      default : bn13931 <= 2'b00;                  endcase

            else                bn13931 <= 2'b00;        end        always @(posedge clk_pixel_i or negedge reset_pixel_n_i)        begin            if (~reset_pixel_n_i)            begin                vk9c98f <= 0;                zke4c7a <= 0;                kf263d2 <= 0;            end            else            begin                vk9c98f <= mr7fe29;                zke4c7a <= uiff14c;                kf263d2 <= mrf8a61;            end        end        assign ened300 = (ana1a9c | sjd4e4 | uv6a724) & (mrf8a61 != 2'b01) & (zkc530d == 2'b00);    end
endgenerate

always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)        vx139f9 <= 0;    else        vx139f9 <= fp2226f;
end
always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)    begin        vifb8ee <= 0;        qtdc772 <= 0;        rte3b95 <= 0;        cb1dcaf <= 0;        dmee57c <= 0;        su72be2 <= 0;    end    else    begin        vifb8ee <= twb2d0d;        qtdc772 <= vk9686a;        rte3b95 <= anb4353;        cb1dcaf <= ana1a9c;        dmee57c <= sjd4e4;        su72be2 <= uv6a724;    end
end
always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)    begin        ri3f3d5 <= 0;        pff9eab <= 0;        xwcf55f <= 0;    end    else    begin        ri3f3d5 <= xj6e254;        pff9eab <= zx712a6;        xwcf55f <= ri89536;    end
end
always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)        qv7c8e <= 0;    else if (anb4353)        qv7c8e <= bl6444d;


end

generate    if (xl37c80 == PD_BUS_WIDTH*NUM_TX_CH)          always @(*)            tj91d0d = me49576[xl37c80-1:0];    else if (xl37c80 == PD_BUS_WIDTH*NUM_TX_CH*2)          always @(*)            tj91d0d = ana1a9c ? me49576[xl37c80/2-1:0] : me49576[xl37c80-1:xl37c80/2];    else if (xl37c80 == PD_BUS_WIDTH*NUM_TX_CH*3)          always @(*)           case (nr4a9b2)
               2'd2: tj91d0d = me49576[xl37c80*2/3-1:xl37c80/3];               2'd0: tj91d0d = me49576[xl37c80-1:xl37c80*2/3];               default: tj91d0d = me49576[xl37c80/3-1:0];           endcase    else if (xl37c80 == PD_BUS_WIDTH*NUM_TX_CH*4)          always @(*)            case (nr4a9b2)
                2'd2: tj91d0d = me49576[xl37c80/2-1:xl37c80/4];                2'd3: tj91d0d = me49576[xl37c80*3/4-1:xl37c80/2];                2'd0: tj91d0d = me49576[xl37c80-1:xl37c80*3/4];                default: tj91d0d = me49576[xl37c80/4-1:0];            endcase
endgenerate
always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)        hd8e86e <= 0;    else if (~fp2226f)        hd8e86e <= 0;    else        hd8e86e <= cbaec36;
end
always @(posedge clk_pixel_i or negedge reset_pixel_n_i)
begin    if (~reset_pixel_n_i)        tw1844 <= 0;    else        tw1844 <= phbffea;
end

pmi_ram_dp #(    .pmi_wr_addr_depth     (the9a37),    .pmi_wr_addr_width     (kq68df2),    .pmi_wr_data_width     (xl37c80),    .pmi_rd_data_width     (xl37c80),    .pmi_rd_addr_depth     (the9a37),    .pmi_rd_addr_width     (kq68df2),    .pmi_regmode           ("reg"),    .pmi_gsr               ("disable"),    .pmi_resetmode         ("sync"),    .pmi_optimization      ("speed"),    .pmi_init_file         ("none"),    .pmi_init_file_format  ("binary"),    .pmi_family            ("LIFDB1"),    .module_type           ("pmi_ram_dp")
)
sw24112 (    .Data       (ipd6769),    .WrAddress  (of7ac13),    .RdAddress  (sud41f2),    .WrClock    (clk_byte_i),    .RdClock    (clk_pixel_i),    .WrClockEn  (je99eb0),    .RdClockEn  (mt80308 | tw1844),    .WE         (je99eb0),    .Reset      (1'b0),    .Q          (co9da60)
);

always@* begin ic4c02a<=rg4df9b[0];sh60150<=rg4df9b[1];iea85<={dt_i>>1,rg4df9b[2]};qi5429<={dt2_i>>1,rg4df9b[3]};zm2a148<=rg4df9b[4];pf50a42<=rg4df9b[5];an85216<=rg4df9b[6];vi42d2a<={payload_i>>1,rg4df9b[7]};ph16952<={wc_i>>1,rg4df9b[8]};epb4a97<={wc2_i>>1,rg4df9b[9]};lfa54bd<=rg4df9b[10];fc2a5ef<=rg4df9b[11];jc52f7a<={uk9844b>>1,rg4df9b[12]};gq97bd3<={xjc2259>>1,rg4df9b[13]};jebde99<=rg4df9b[14];ayef4cb<=rg4df9b[15];wj7a658<=rg4df9b[16];czd32c5<=rg4df9b[17];zm9962c<=rg4df9b[18];iccb163<=rg4df9b[19];vi58b19<=rg4df9b[20];zkc58ca<=rg4df9b[21];yz2c653<=rg4df9b[22];jc6329d<=rg4df9b[23];nt194ea<=rg4df9b[24];rgca757<=rg4df9b[25];os53abb<=rg4df9b[26];uk9d5d9<=rg4df9b[27];uieaec9<=rg4df9b[28];dm57649<=rg4df9b[29];irbb24a<=rg4df9b[30];uvd9255<=rg4df9b[31];wjc92ad<=rg4df9b[32];yk4956c<=rg4df9b[33];rt4ab60<=rg4df9b[34];nr55b06<=rg4df9b[35];jead836<=rg4df9b[36];ps6c1b2<=rg4df9b[37];qt60d93<=rg4df9b[38];rv6c9c<=rg4df9b[39];ir364e6<=rg4df9b[40];pub2735<=rg4df9b[41];tw939ab<=rg4df9b[42];je9cd5b<=rg4df9b[43];jpe6ada<=rg4df9b[44];uv5b5d4<={aabcd53>>1,rg4df9b[45]};dbba91e<={jpe6a99>>1,rg4df9b[46]};yz23d85<={pu354cf>>1,rg4df9b[47]};jrb0b5f<={rvaa67a>>1,rg4df9b[48]};yz85aff<={ay533d6>>1,rg4df9b[49]};rv2d7fd<=rg4df9b[50];fn5ff7f<={of7ac13>>1,rg4df9b[51]};eaffbff<=rg4df9b[52];kdfdff8<=rg4df9b[53];iceffc5<=rg4df9b[54];mr7fe29<={bn13931>>1,rg4df9b[55]};uiff14c<={vk9c98f>>1,rg4df9b[56]};mrf8a61<={zke4c7a>>1,rg4df9b[57]};zkc530d<={kf263d2>>1,rg4df9b[58]};ux2986a<={sw31e94>>1,rg4df9b[59]};yk4c354<=rg4df9b[60];rt61aa0<=rg4df9b[61];yzd506<=rg4df9b[62];qt6a834<=rg4df9b[63];yx541a5<=rg4df9b[64];zza0d2d<=rg4df9b[65];lf696e<=rg4df9b[66];ks34b76<=rg4df9b[67];hda5bb1<=rg4df9b[68];xl2dd8e<=rg4df9b[69];zx6ec76<=rg4df9b[70];rg763b7<=rg4df9b[71];kfb1dbb<=rg4df9b[72];hd8eddd<=rg4df9b[73];jc76eee<=rg4df9b[74];twb7772<=rg4df9b[75];anbbb93<={sucef05>>1,rg4df9b[76]};fnddc9c<={su77828>>1,rg4df9b[77]};byee4e6<={mgbc140>>1,rg4df9b[78]};cm72732<={uie0a00>>1,rg4df9b[79]};tw93991<={uk5000>>1,rg4df9b[80]};je9cc8b<=rg4df9b[81];jpe645a<=rg4df9b[82];nt322d6<=rg4df9b[83];fp916b7<=rg4df9b[84];db8b5bf<=rg4df9b[85];jp5adff<=rg4df9b[86];mrd6fff<=rg4df9b[87];fcb7ffd<=rg4df9b[88];phbffea<=rg4df9b[89];sufff56<=rg4df9b[90];qgffab0<=rg4df9b[91];czfd580<=rg4df9b[92];sueac04<=rg4df9b[93];me56021<=rg4df9b[94];dbb0108<=rg4df9b[95];yz80846<=rg4df9b[96];pu4235<=rg4df9b[97];qi211aa<=rg4df9b[98];ux8d51<=rg4df9b[99];me46a8d<=rg4df9b[100];tw35468<=rg4df9b[101];xlaa342<=rg4df9b[102];yx51a16<=rg4df9b[103];sw8d0b4<=rg4df9b[104];su685a0<=rg4df9b[105];ne42d01<=rg4df9b[106];db1680a<=rg4df9b[107];mtb4057<=rg4df9b[108];tja02bc<=rg4df9b[109];ri15e7<=rg4df9b[110];gqaf3a<=rg4df9b[111];by579d0<=rg4df9b[112];ukbce83<=rg4df9b[113];mre7419<=rg4df9b[114];je3a0cc<=rg4df9b[115];byd0663<=rg4df9b[116];vk8331b<=rg4df9b[117];tj198db<=rg4df9b[118];kdcc6de<=rg4df9b[119];ho636f4<=rg4df9b[120];vk1b7a2<=rg4df9b[121];ykdbd12<=rg4df9b[122];ayde891<=rg4df9b[123];rgf4489<=rg4df9b[124];fca244a<=rg4df9b[125];gd12252<=rg4df9b[126];hd91294<=rg4df9b[127];ri894a7<=rg4df9b[128];nr4a53a<=rg4df9b[129];jc529d7<=rg4df9b[130];jr94ebb<=rg4df9b[131];doa75de<=rg4df9b[132];pu3aef2<=rg4df9b[133];vvd7792<=rg4df9b[134];wlbbc96<=rg4df9b[135];wwde4b4<=rg4df9b[136];ipf25a0<=rg4df9b[137];ou92d05<=rg4df9b[138];vk96829<=rg4df9b[139];anb414b<=rg4df9b[140];bna0a5c<=rg4df9b[141];ym52e6<=rg4df9b[142];mt29730<={ofdc9ce>>1,rg4df9b[143]};sh4b985<={vie4e74>>1,rg4df9b[144]};su5cc2c<={fp273a2>>1,rg4df9b[145]};dze6160<=rg4df9b[146];pu30b06<=rg4df9b[147];ux85833<=rg4df9b[148];kf2c19d<=rg4df9b[149];cz60ced<=rg4df9b[150];jr676c<=rg4df9b[151];an33b67<=rg4df9b[152];ym9db3c<=rg4df9b[153];yxed9e0<=rg4df9b[154];fa6cf04<=rg4df9b[155];ic67822<=rg4df9b[156];ir3c111<=rg4df9b[157];ose088c<=rg4df9b[158];zm4460<=rg4df9b[159];vx22302<=rg4df9b[160];do11816<=rg4df9b[161];hq8c0b2<=rg4df9b[162];kd60592<=rg4df9b[163];yz2c95<=rg4df9b[164];nt164ac<=rg4df9b[165];jeb2566<=rg4df9b[166];wy92b33<=rg4df9b[167];ir95999<=rg4df9b[168];ukacccc<=rg4df9b[169];zk66660<=rg4df9b[170];kf33302<=rg4df9b[171];fc99815<=rg4df9b[172];czcc0aa<=rg4df9b[173];wj60554<={vid0d29>>1,rg4df9b[174]};qv2aa5<={vk8694a>>1,rg4df9b[175]};ym1552c<={mg34a52>>1,rg4df9b[176]};zzaa961<={xla5291>>1,rg4df9b[177]};zza587c<={ld4a47d>>1,rg4df9b[178]};dz61f35<={tu523ef>>1,rg4df9b[179]};ne7cd70<={hd91f7a>>1,rg4df9b[180]};pu35c1f<={oh8fbd6>>1,rg4df9b[181]};uxae0fb<=rg4df9b[182];al707dc<=rg4df9b[183];zm83ee4<=rg4df9b[184];sw1f722<=rg4df9b[185];byfb910<=rg4df9b[186];mrdc882<=rg4df9b[187];fae4414<=rg4df9b[188];lf220a3<=rg4df9b[189];aa1051e<=rg4df9b[190];
mg828f1<=rg4df9b[191];tw14788<=rg4df9b[192];iea3c43<=rg4df9b[193];rgf10ca<={of6a931>>1,rg4df9b[194]};ec88652<=rg4df9b[195];kq43290<=rg4df9b[196];jr19481<=rg4df9b[197];lqca40f<=rg4df9b[198];tu5207b<=rg4df9b[199];gd903da<=rg4df9b[200];lf81ed5<=rg4df9b[201];ouf6af<=rg4df9b[202];th7b579<=rg4df9b[203];dmdabcf<=rg4df9b[204];psd5e7b<=rg4df9b[205];bnaf3da<=rg4df9b[206];dm79ed6<=rg4df9b[207];facf6b3<=rg4df9b[208];zx7b59b<=rg4df9b[209];zkdacdf<=rg4df9b[210];kdd66fb<=rg4df9b[211];ksb37dc<=rg4df9b[212];hd9bee1<=rg4df9b[213];vidf70f<=rg4df9b[214];zkfb87a<=rg4df9b[215];wjdc3d2<=rg4df9b[216];lqe1e95<=rg4df9b[217];aaf4aa<=rg4df9b[218];kd7a551<=rg4df9b[219];ldd2a8d<=rg4df9b[220];yz9546f<=rg4df9b[221];zzaa37d<=rg4df9b[222];of51bee<=rg4df9b[223];qi8df74<=rg4df9b[224];ip6fba1<=rg4df9b[225];kq7dd0d<=rg4df9b[226];jcee869<=rg4df9b[227];vv7434b<=rg4df9b[228];mta1a5e<=rg4df9b[229];kfd2f4<=rg4df9b[230];ho697a4<=rg4df9b[231];en4bd23<=rg4df9b[232];mr5e91c<=rg4df9b[233];jcf48e5<=rg4df9b[234];yza472b<=rg4df9b[235];gd2395d<=rg4df9b[236];tj1caed<=rg4df9b[237];ice576e<=rg4df9b[238];gq2bb71<=rg4df9b[239];vi5db89<=rg4df9b[240];aledc4a<=rg4df9b[241];xj6e254<={gbe7e7a>>1,rg4df9b[242]};zx712a6<={ri3f3d5>>1,rg4df9b[243]};ri89536<={pff9eab>>1,rg4df9b[244]};nr4a9b2<={xwcf55f>>1,rg4df9b[245]};gb54d96<=rg4df9b[246];eca6cb4<=rg4df9b[247];cb365a1<=rg4df9b[248];twb2d0d<=rg4df9b[249];vk9686a<=rg4df9b[250];anb4353<=rg4df9b[251];ana1a9c<=rg4df9b[252];sjd4e4<=rg4df9b[253];uv6a724<=rg4df9b[254];yk53924<=rg4df9b[255];xy9c921<=rg4df9b[256];pse490a<=rg4df9b[257];gq24852<=rg4df9b[258];mg24290<=rg4df9b[259];mg21481<=rg4df9b[260];mga409<=rg4df9b[261];by52049<=rg4df9b[262];db81255<={sud41f2>>1,rg4df9b[263]};me49576<={qv7c8e>>1,rg4df9b[264]};cbaec36<={tj91d0d>>1,rg4df9b[265]};pu86d5f<={hd8e86e>>1,rg4df9b[266]};sj36afa<=rg4df9b[267];phb57d4<=rg4df9b[268];qvabea6<=rg4df9b[269];zx5f535<=rg4df9b[270];eafa9ae<=rg4df9b[271];icd4d70<=rg4df9b[272];uka6b80<={irb4bd0>>1,rg4df9b[273]};wlae00b<={xy2f42e>>1,rg4df9b[274]};yz802e4<={yx7a172>>1,rg4df9b[275]};lsb922<={rgd0b95>>1,rg4df9b[276]};vie4890<={qv85caa>>1,rg4df9b[277]};co24482<=rg4df9b[278];nt22411<=rg4df9b[279];sj1208e<=rg4df9b[280];yz90474<=rg4df9b[281];wy823a5<=rg4df9b[282];zm11d29<=rg4df9b[283];db8e94a<=rg4df9b[284];fn74a56<=rg4df9b[285];tja52b7<=rg4df9b[286];sj295bf<=rg4df9b[287];pf4adfd<=rg4df9b[288];ui56fee<=rg4df9b[289];rib7f71<=rg4df9b[290];hdbfb8a<=rg4df9b[291];ipfdc56<=rg4df9b[292];tuee2b5<=rg4df9b[293];th715aa<=rg4df9b[294];yk56ab4<={vxb061a>>1,rg4df9b[295]};tjaad0e<={ls830d6>>1,rg4df9b[296]};sjb43b9<={qv186b3>>1,rg4df9b[297]};zmee64<={qtc359d>>1,rg4df9b[298]};wyb9911<={ipd6769>>1,rg4df9b[299]};bl6444d<={co9da60>>1,rg4df9b[300]};fp2226f<=rg4df9b[301];fc1137e<=rg4df9b[302];end
always@* begin ba89bf3[2047]<=sp2_en_i;ba89bf3[2046]<=dt_i[0];ba89bf3[2044]<=dt2_i[0];ba89bf3[2043]<=gb7ad08;ba89bf3[2040]<=lp_av_en_i;ba89bf3[2038]<=ald6844;ba89bf3[2032]<=lp2_av_en_i;ba89bf3[2029]<=ohb4225;ba89bf3[2017]<=payload_en_i;ba89bf3[2013]<=osc13ff;ba89bf3[2010]<=ira112c;ba89bf3[2003]<=wy5fdf;ba89bf3[1990]<=fp8ef35;ba89bf3[1987]<=payload_i[0];ba89bf3[1982]<=cb95540;ba89bf3[1980]<=ay533d6[0];ba89bf3[1979]<=lf9ff8;ba89bf3[1973]<=ir8965;ba89bf3[1963]<=gd75eb;ba89bf3[1958]<=zm2fef9;ba89bf3[1957]<=uxdc14;ba89bf3[1953]<=zm9cfcf;ba89bf3[1942]<=wy82726;ba89bf3[1932]<=su779ae;ba89bf3[1929]<=fn4a48f;ba89bf3[1926]<=wc_i[0];ba89bf3[1923]<=nt9195d;ba89bf3[1921]<=os43edb;ba89bf3[1917]<=fpaaa05;ba89bf3[1914]<=fnc7d0d;ba89bf3[1913]<=je99eb0;ba89bf3[1911]<=vv4ffc7;ba89bf3[1903]<=shd3657;ba89bf3[1898]<=wj44b2d;ba89bf3[1879]<=ba3af5d;ba89bf3[1876]<=mt80308;ba89bf3[1872]<=cbdbfc;ba89bf3[1868]<=sh7f7cb;ba89bf3[1866]<=pf6e0a5;ba89bf3[1863]<=ou109d4;ba89bf3[1858]<=gbe7e7a[0];ba89bf3[1837]<=bn13931[0];ba89bf3[1816]<=mgbcd70;ba89bf3[1810]<=xw5247f;ba89bf3[1805]<=wc2_i[0];ba89bf3[1802]<=kfa1bb6;ba89bf3[1799]<=je8caee;ba89bf3[1795]<=ie1f6d8;ba89bf3[1786]<=pf5502f;ba89bf3[1783]<=jpe6a99[0];ba89bf3[1780]<=ou3e86e;ba89bf3[1778]<=of7ac13[0];ba89bf3[1775]<=sh7fe3e;ba89bf3[1770]<=thd286d;ba89bf3[1758]<=zz9b2bc;ba89bf3[1748]<=zm2596d;ba89bf3[1710]<=nrd7aea;ba89bf3[1704]<=tw1844;ba89bf3[1701]<=xw7390a;ba89bf3[1699]<=db2daa4;ba89bf3[1696]<=yk6dfe5;ba89bf3[1689]<=vifbe5d;ba89bf3[1685]<=mr7052e;ba89bf3[1679]<=mr4b3da;ba89bf3[1678]<=tj84ea0;ba89bf3[1668]<=ri3f3d5[0];ba89bf3[1627]<=vk9c98f[0];ba89bf3[1624]<=ou24256;ba89bf3[1605]<=dm52c18;ba89bf3[1589]<=jcca3ee;ba89bf3[1584]<=ble6b81;ba89bf3[1573]<=ks923fa;ba89bf3[1572]<=tw89d84;ba89bf3[1567]<=wwf527b;ba89bf3[1562]<=cmce611;ba89bf3[1557]<=xj745a8;ba89bf3[1556]<=uxddb4;ba89bf3[1551]<=en65773;ba89bf3[1548]<=aaf727;ba89bf3[1543]<=zkfb6c0;ba89bf3[1524]<=doa817f;ba89bf3[1521]<=ph163bc;ba89bf3[1519]<=pu354cf[0];ba89bf3[1513]<=lqf4370;ba89bf3[1512]<=sw8273f;ba89bf3[1509]<=mrd609c;ba89bf3[1504]<=rgfe465;ba89bf3[1502]<=qgff1f4;ba89bf3[1499]<=ne574d9;ba89bf3[1493]<=ks3e00c;ba89bf3[1492]<=lf9436f;ba89bf3[1469]<=gbd95e6;ba89bf3[1466]<=sj8f4a1;ba89bf3[1448]<=kf2cb6a;ba89bf3[1421]<=of7f28f;ba89bf3[1417]<=ic56276;ba89bf3[1415]<=the3d49;ba89bf3[1404]<=vxa058e;ba89bf3[1402]<=rt4a09c;ba89bf3[1400]<=an33f91;ba89bf3[1398]<=xw5d5d3;ba89bf3[1377]<=ks2b8f5;ba89bf3[1374]<=ri99282;ba89bf3[1373]<=ngbd757;ba89bf3[1361]<=dbc223;ba89bf3[1359]<=xla5291[0];ba89bf3[1355]<=uk5000[0];ba89bf3[1354]<=ba9c852;ba89bf3[1350]<=of6a931[0];ba89bf3[1349]<=kf88f7;ba89bf3[1344]<=gb6ff28;ba89bf3[1343]<=tu523ef[0];ba89bf3[1341]<=yx7a172[0];ba89bf3[1330]<=psdf2ea;ba89bf3[1326]<=fn40007;ba89bf3[1323]<=qi82974;ba89bf3[1322]<=gq21493;ba89bf3[1310]<=ay59ed5;ba89bf3[1308]<=db27507;ba89bf3[1305]<=wla4c6c;ba89bf3[1301]<=ux23dec;ba89bf3[1289]<=pff9eab[0];ba89bf3[1286]<=fa69805;ba89bf3[1280]<=zxfca2c;ba89bf3[1279]<=oh8fbd6[0];ba89bf3[1271]<=qv85caa[0];ba89bf3[1224]<=qgcba96;ba89bf3[1210]<=ie1f0;ba89bf3[1207]<=zke4c7a[0];ba89bf3[1201]<=co212b1;ba89bf3[1199]<=dba5d02;ba89bf3[1195]<=ho524c9;ba89bf3[1193]<=vid0d29[0];ba89bf3[1163]<=qv238fe;ba89bf3[1162]<=vxb061a[0];ba89bf3[1155]<=qtdc772;ba89bf3[1144]<=ld7b543;ba89bf3[1136]<=qv7c8e[0];ba89bf3[1130]<=en51f73;ba89bf3[1125]<=ie31b24;ba89bf3[1120]<=do35c0f;ba89bf3[1112]<=ie1fd7f;ba89bf3[1110]<=kdf7b2b;ba89bf3[1104]<=qtc359d[0];ba89bf3[1098]<=nt91fd0;ba89bf3[1096]<=gb4ec23;ba89bf3[1086]<=swa93d8;ba89bf3[1076]<=zk73089;ba89bf3[1067]<=baa2d46;ba89bf3[1065]<=pf6eda5;ba89bf3[1060]<=mr7aafb;ba89bf3[1054]<=aa2bb9d;ba89bf3[1053]<=dmee57c;ba89bf3[1048]<=ld7b939;ba89bf3[1039]<=ykdb603;ba89bf3[1026]<=hd28b39;ba89bf3[1023]<=sp_en_i;ba89bf3[1021]<=ykef5a1;ba89bf3[1006]<=dzd827f;ba89bf3[1001]<=zx40bfb;ba89bf3[995]<=anb1de6;ba89bf3[991]<=kq72aa8;ba89bf3[990]<=rvaa67a[0];ba89bf3[981]<=nec0ebd;ba89bf3[978]<=kfa1b82;ba89bf3[976]<=vx139f9;ba89bf3[971]<=dbb04e4;ba89bf3[964]<=hbe9491;ba89bf3[961]<=off232b;ba89bf3[960]<=pua87db;ba89bf3[957]<=gbf8fa1;ba89bf3[951]<=lfba6ca;ba89bf3[938]<=icf0061;ba89bf3[936]<=yza1b7f;ba89bf3[931]<=qte213a;ba89bf3[901]<=ld74376;ba89bf3[891]<=aabcd53[0];ba89bf3[885]<=yx7a50d;ba89bf3[850]<=xwee721;ba89bf3[849]<=yx65b54;ba89bf3[839]<=ri8967b;ba89bf3[812]<=dz6484a;ba89bf3[802]<=osea583;ba89bf3[794]<=rtf947d;ba89bf3[786]<=wlb13b0;ba89bf3[783]<=ri1ea4f;ba89bf3[778]<=cmce8b5;ba89bf3[774]<=tj81ee4;ba89bf3[760]<=ir2c77;ba89bf3[756]<=rt504e7;ba89bf3[752]<=an9fc8c;ba89bf3[749]<=sueae9b;ba89bf3[746]<=yz7c01;ba89bf3[733]<=sw31e94[0];ba89bf3[710]<=fpafe51;ba89bf3[708]<=hb4ac4e;ba89bf3[707]<=ay5c7a9;ba89bf3[702]<=jp740b1;ba89bf3[701]<=yxc9413;ba89bf3[700]<=ww467f2;ba89bf3[699]<=dmebaba;ba89bf3[688]<=cz6571e;ba89bf3[687]<=ba93250;ba89bf3[679]<=mg34a52[0];ba89bf3[677]<=uie0a00[0];ba89bf3[674]<=fn6111e;ba89bf3[671]<=ld4a47d[0];ba89bf3[670]<=xy2f42e[0];ba89bf3[663]<=hd28000;ba89bf3[661]<=vie4292;ba89bf3[652]<=ip5498d;ba89bf3[650]<=mr447bd;ba89bf3[643]<=ened300;ba89bf3[640]<=wj7f945;ba89bf3[639]<=hd91f7a[0];ba89bf3[635]<=rgd0b95[0];ba89bf3[612]<=fnf9752;ba89bf3[605]<=ou3e;ba89bf3[599]<=zm14ba0;ba89bf3[597]<=qia499;ba89bf3[596]<=sufa1a5;ba89bf3[581]<=fp8471f;ba89bf3[577]<=vifb8ee;ba89bf3[572]<=necf6a8;ba89bf3[568]<=sud41f2[0];ba89bf3[562]<=mt26364;ba89bf3[556]<=fne3faf;ba89bf3[555]<=zm1ef65;ba89bf3[552]<=qv186b3[0];ba89bf3[530]<=xwcf55f[0];ba89bf3[526]<=cb1dcaf;ba89bf3[513]<=yke5167;ba89bf3[510]<=me7deb4;ba89bf3[
503]<=jp7b04f;ba89bf3[495]<=co2e555;ba89bf3[490]<=gd181d7;ba89bf3[482]<=sw9d292;ba89bf3[480]<=xwd50fb;ba89bf3[465]<=vi7c427;ba89bf3[450]<=hd8e86e[0];ba89bf3[425]<=cm7dce4;ba89bf3[419]<=hq112cf;ba89bf3[406]<=rg6c909;ba89bf3[401]<=dm5d4b0;ba89bf3[389]<=gd39d16;ba89bf3[387]<=mr703dc;ba89bf3[373]<=mgf80;ba89bf3[366]<=kf263d2[0];ba89bf3[355]<=ayf5fca;ba89bf3[354]<=nt9589;ba89bf3[351]<=ou2e816;ba89bf3[350]<=xya8cfe;ba89bf3[344]<=rtecae3;ba89bf3[343]<=mg9264a;ba89bf3[339]<=vk8694a[0];ba89bf3[338]<=mgbc140[0];ba89bf3[335]<=irb4bd0[0];ba89bf3[321]<=co9da60[0];ba89bf3[298]<=ip7f434;ba89bf3[290]<=ntb08e3;ba89bf3[288]<=bl5f71d;ba89bf3[278]<=vx1c7f5;ba89bf3[276]<=ls830d6[0];ba89bf3[263]<=rte3b95;ba89bf3[251]<=dz4f609;ba89bf3[245]<=nt303a;ba89bf3[241]<=jc73a52;ba89bf3[240]<=rgdaa1f;ba89bf3[232]<=tjaf884;ba89bf3[225]<=tj91d0d[0];ba89bf3[212]<=qv8fb9c;ba89bf3[209]<=xjc2259[0];ba89bf3[203]<=ou8d921;ba89bf3[194]<=fp273a2[0];ba89bf3[193]<=cbae07b;ba89bf3[177]<=dmfebf9;ba89bf3[175]<=dbb519f;ba89bf3[172]<=babd95c;ba89bf3[169]<=su77828[0];ba89bf3[167]<=oub697a;ba89bf3[160]<=ipd6769[0];ba89bf3[149]<=kf8fe86;ba89bf3[145]<=by7611c;ba89bf3[144]<=anabee3;ba89bf3[125]<=me49ec1;ba89bf3[122]<=lqc0607;ba89bf3[120]<=faee74a;ba89bf3[116]<=oh95f10;ba89bf3[104]<=uk9844b[0];ba89bf3[97]<=vie4e74[0];ba89bf3[87]<=fp16a33;ba89bf3[84]<=sucef05[0];ba89bf3[83]<=ps76d2f;ba89bf3[72]<=vid57dc;ba89bf3[61]<=jpd80c0;ba89bf3[60]<=zk5dce9;ba89bf3[58]<=su72be2;ba89bf3[48]<=ofdc9ce[0];ba89bf3[42]<=ir39de0;ba89bf3[30]<=wwdb018;ba89bf3[21]<=cm673bc;ba89bf3[10]<=oh2ce77;ba89bf3[5]<=bl459ce;end         assign hofe38c = ba89bf3,rg4df9b = ph8e31b; initial begin cmff49b = $fopen(".fred"); $fdisplay( cmff49b, "%3h\n%3h", (blf36ef >> 4) & wweff8e, (blf36ef >> (medbbfe+4)) & wweff8e ); $fclose(cmff49b); $readmemh(".fred", ls8c6ff); end always @ (hofe38c) begin hq1bfd2 = ls8c6ff[1]; for (wwfa4d9=0; wwfa4d9<qt6fcdb; wwfa4d9=wwfa4d9+1) begin ph8e31b[wwfa4d9] = hofe38c[hq1bfd2]; vidfe93 = ^(hq1bfd2 & ls8c6ff[0]); hq1bfd2 = {hq1bfd2, vidfe93}; end end 
endmodule

